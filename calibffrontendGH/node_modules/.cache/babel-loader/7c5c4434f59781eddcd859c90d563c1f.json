{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport MapContainer from '../src/containers/mapcontainer';\nimport './index.css';\nimport SearchForm from '../src/components/searchform';\nimport Favbeach from '../src/components/favbeach';\nimport ReviewForm from '../src/components/reviewform';\nimport Reviews from '../src/components/reviews';\nimport Userbeaches from '../src/components/userbeaches';\nimport Login from './components/Login';\nimport { Route, Switch } from 'react-router-dom';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userbeaches: [],\n      reviews: [],\n      results: [],\n      displayBeach: [],\n      user: {\n        id: 1\n      },\n      geocode: {\n        lat: \"\",\n        long: \"\"\n      },\n      token: null,\n      loggedInUserId: null\n    };\n\n    this.addData = async data => {\n      let user_id = this.state.loggedInUserId;\n      await fetch(`http://localhost:3000/users/${user_id}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${data}`\n        }\n      }).then(res => res.json()).then(resObj => {\n        console.log(resObj);\n        this.setState({\n          reviews: resObj.reviews,\n          userbeaches: resObj.userbeaches\n        });\n      });\n    };\n\n    this.setToken = ({\n      token,\n      user_id\n    }) => {\n      localStorage.token = token;\n      localStorage.userId = user_id;\n      this.setState({\n        token: token,\n        loggedInUserId: user_id\n      });\n    };\n\n    this.logOutClick = () => {\n      localStorage.userId = undefined;\n      localStorage.token = undefined;\n      this.setState({\n        loggedInUserId: null,\n        token: null\n      });\n    };\n\n    this.addReview = review => {\n      let reviews = this.state.reviews;\n      reviews.unshift(review);\n      this.setState({\n        reviews\n      });\n    };\n\n    this.deleteReview = review_id => {\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let reviews = this.state.reviews.filter(review => review.id !== review_id);\n        this.setState({\n          reviews: reviews\n        });\n      });\n    };\n\n    this.reviewBeach = (props, beach_id) => {\n      props.history.push('/reviews');\n    };\n\n    this.grabBeaches = async QlatLong => {\n      let rawBeaches = await fetch('http://localhost:3000/favbeaches');\n      let beaches = await rawBeaches.json();\n      let newBeaches = beaches.filter(beach => {\n        return parseFloat(beach.lat) <= QlatLong.lat + .05 && parseFloat(beach.lat) >= QlatLong.lat - .05;\n      }); // console.log(newBeaches)\n\n      this.setState({\n        results: newBeaches\n      });\n    };\n\n    this.queryCode = responseObj => {\n      let QlatLong = {};\n\n      if (responseObj.results.length > 0) {\n        QlatLong.lat = responseObj.results[0].geometry.location.lat;\n        QlatLong.lng = responseObj.results[0].geometry.location.lng;\n      } else {\n        alert(\"Your Please Resubmit your user Query\"); // QlatLong = {lat:37.8591,lng:122.4853}\n      } // console.log(\"default\", QlatLong)\n\n\n      this.grabBeaches(QlatLong);\n    };\n\n    this.displayBeach = (clickedBeach, props) => {\n      this.setState({\n        displayBeach: clickedBeach\n      }); // console.log(\"favbeach props\", props)\n\n      props.history.push('/favbeach');\n      console.log(\"clickedBeach\", clickedBeach);\n    };\n\n    this.userBeaches = props => {\n      props.history.push('/userbeaches');\n    };\n\n    this.returnHome = props => {\n      props.history.push('/');\n    };\n\n    this.updateReview = (review, newReview) => {\n      console.log(review, newReview);\n      let review_id = review.id;\n      let reviewPatch = {\n        user_id: this.state.loggedInUserId,\n        favbeach_id: review.favbeach_id,\n        review: newReview\n      };\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'PATCH',\n        body: JSON.stringify(reviewPatch),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        return console.log(respObj);\n      });\n    };\n\n    this.addBeachtoUBs = props => {\n      const favbeach_id = props.beach.id;\n      const user_id = this.state.loggedInUserId;\n      const name = props.beach.name;\n      const userbeach = {\n        favbeach_id: favbeach_id,\n        user_id: user_id,\n        name: name\n      };\n      const url = \"http://localhost:3000/userbeaches\";\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(userbeach),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(res => {\n        console.log('Success:', res);\n        let userbeaches = this.state.userbeaches;\n        userbeaches.push(userbeach);\n        this.setState({\n          userbeaches: userbeaches\n        });\n        props.history.push('/userbeaches');\n      });\n    };\n\n    this.deleteFromUBs = beach => {\n      const url = `http://localhost:3000/userbeaches/${beach.id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let userbeaches = this.state.userbeaches.filter(userbeach => userbeach.id !== beach.id);\n        this.setState({\n          userbeaches: userbeaches\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"CALIFORNIA BEACH FINDER\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, !!this.state.token ? React.createElement(\"button\", {\n      id: \"logoutButton\",\n      onClick: this.logOutClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Log Out\") : \"\"), !!this.state.token ? React.createElement(Login, {\n      token: this.state.token,\n      addData: this.addData,\n      loggedInUserId: this.state.loggedInUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      setToken: this.setToken,\n      addData: this.addData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: props => React.createElement(\"div\", {\n        id: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(SearchForm, Object.assign({}, props, {\n        grabBeaches: this.grabBeaches,\n        queryCode: this.queryCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: props => React.createElement(\"div\", {\n        id: \"map-showcase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(MapContainer, Object.assign({}, props, {\n        beaches: this.state.results,\n        displayBeach: this.displayBeach,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/favbeach',\n      render: props => React.createElement(\"div\", {\n        id: \"fav-beach\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Favbeach, Object.assign({\n        id: \"favbeach\"\n      }, props, {\n        beach: this.state.displayBeach,\n        refreshBeaches: this.refreshBeaches,\n        addBeachtoUBs: this.addBeachtoUBs,\n        userBeaches: this.userBeaches,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/userbeaches',\n      render: props => React.createElement(\"div\", {\n        id: \"userbeaches\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Userbeaches, Object.assign({}, props, {\n        userbeaches: this.state.userbeaches,\n        deleteFromUBs: this.deleteFromUBs,\n        returnHome: this.returnHome,\n        reviewBeach: this.reviewBeach,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/reviews',\n      render: props => React.createElement(\"div\", {\n        id: \"reviewform roundbutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(ReviewForm, Object.assign({}, props, {\n        displayBeach: this.state.displayBeach,\n        addReview: this.addReview,\n        returnHome: this.returnHome,\n        user_id: this.state.loggedInUserId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/reviews',\n      render: props => React.createElement(\"div\", {\n        id: \"reviews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Reviews, Object.assign({}, props, {\n        reviews: this.state.reviews,\n        beaches: this.state.results,\n        deleteReview: this.deleteReview,\n        updateReview: this.updateReview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js"],"names":["React","Component","MapContainer","SearchForm","Favbeach","ReviewForm","Reviews","Userbeaches","Login","Route","Switch","App","state","userbeaches","reviews","results","displayBeach","user","id","geocode","lat","long","token","loggedInUserId","addData","data","user_id","fetch","method","headers","then","res","json","resObj","console","log","setState","setToken","localStorage","userId","logOutClick","undefined","addReview","review","unshift","deleteReview","review_id","url","catch","error","respObj","filter","reviewBeach","props","beach_id","history","push","grabBeaches","QlatLong","rawBeaches","beaches","newBeaches","beach","parseFloat","queryCode","responseObj","length","geometry","location","lng","alert","clickedBeach","userBeaches","returnHome","updateReview","newReview","reviewPatch","favbeach_id","body","JSON","stringify","addBeachtoUBs","name","userbeach","deleteFromUBs","render","refreshBeaches"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MapContainer from '../src/containers/mapcontainer'\nimport './index.css';\nimport SearchForm from '../src/components/searchform'\nimport Favbeach from '../src/components/favbeach'\nimport ReviewForm from '../src/components/reviewform'\nimport Reviews from '../src/components/reviews'\nimport Userbeaches from '../src/components/userbeaches'\nimport Login from './components/Login'\nimport {Route, Switch} from 'react-router-dom'\n\n\nexport default class App extends Component {\n    state = {\n        userbeaches:[],\n        reviews:[],\n        results:[],\n        displayBeach:[],\n        user: {\n            id: 1\n            },\n        geocode:{lat:\"\",\n                long:\"\"\n            },\n        token:null,\n        loggedInUserId: null\n    }\n\n    // componentDidMount(){\n        // fetch(\"http://localhost:3000/reviews\")\n        // .then(res=> res.json())\n        // .then(resObj=>{\n        //     console.log(resObj)\n        //     this.setState({reviews:resObj})\n        // })\n\n        // fetch(\"http://localhost:3000/userbeaches\")\n        // .then(res=> res.json())\n        // .then(resObj=>{\n        //     // console.log(resObj)\n        //     this.setState({userbeaches:resObj})\n        // })\n    // }\n\n    addData = async (data) => {\n        let user_id = this.state.loggedInUserId\n        await \n        fetch(`http://localhost:3000/users/${user_id}`,\n        {method: 'GET',\n        headers:{'Authorization':`Bearer ${data}`\n        }}\n        )\n        .then(res=> res.json())\n        .then(resObj=>{\n        console.log(resObj)\n        this.setState({reviews:resObj.reviews,\n            userbeaches:resObj.userbeaches})\n        })\n    }\n    \n    setToken = ({token, user_id}) => {\n        localStorage.token = token\n        localStorage.userId = user_id\n        \n        this.setState({\n            token:token,\n            loggedInUserId:user_id\n        })\n    }\n    \n    logOutClick = () => {\n        localStorage.userId = undefined\n        localStorage.token = undefined\n\n        this.setState({\n            loggedInUserId: null,\n            token: null\n        })\n    }\n    \n\n    addReview = (review) => {\n        let reviews = this.state.reviews\n        reviews.unshift(review)\n        this.setState({reviews})\n    }\n   \n    deleteReview = (review_id) => {\n                            const url = `http://localhost:3000/reviews/${review_id}`\n                            fetch(url, {method: 'DELETE'})\n                            .then(res=>res.json())\n                            .catch(error=>console.error(\"Error:\", error))\n                            .then(respObj=>{\n                                let reviews = this.state.reviews.filter(review => review.id !== review_id)\n                                this.setState({reviews:reviews})\n                            })  \n                        }\n\n                       \n    reviewBeach = (props, beach_id) => {\n        props.history.push('/reviews')\n    }\n                        \n    \n    grabBeaches = async (QlatLong) => {\n        let rawBeaches = await fetch('http://localhost:3000/favbeaches')\n        let beaches = await rawBeaches.json()\n        let newBeaches = beaches.filter(beach => {\n            return parseFloat(beach.lat) <= QlatLong.lat+.05 && \n            parseFloat(beach.lat) >= QlatLong.lat-.05\n        })\n        // console.log(newBeaches)\n        this.setState({results:newBeaches})\n    }\n    \n\n    queryCode = (responseObj) => {\n        let QlatLong = {}\n        if (responseObj.results.length >0){\n            QlatLong.lat = responseObj.results[0].geometry.location.lat\n            QlatLong.lng =  responseObj.results[0].geometry.location.lng\n        }else{\n            alert(\"Your Please Resubmit your user Query\")\n            // QlatLong = {lat:37.8591,lng:122.4853}\n        }\n            // console.log(\"default\", QlatLong)\n        this.grabBeaches(QlatLong)\n    }\n\n    displayBeach = (clickedBeach, props) => {\n        this.setState({displayBeach:clickedBeach})\n        // console.log(\"favbeach props\", props)\n        props.history.push('/favbeach')\n        console.log(\"clickedBeach\",clickedBeach)\n    }\n\n    userBeaches = (props) =>{\n        props.history.push('/userbeaches')\n    }\n\n    returnHome = (props) =>{\n        props.history.push('/')\n    }\n    \n    // refreshBeaches = (event) => {\n    //     this.setState({displayBeach:[]})\n    // }\n    \n    updateReview = (review, newReview) => {\n        console.log(review, newReview)\n        let review_id = review.id\n        let reviewPatch = {user_id:this.state.loggedInUserId, favbeach_id:review.favbeach_id, review:newReview}\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method:'PATCH',\n            body:JSON.stringify(reviewPatch),\n            headers: {'content-type':'application/json'}\n            })\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n           return console.log(respObj)\n        })\n    }\n\n    addBeachtoUBs = (props) => {\n        const favbeach_id = props.beach.id\n        const user_id = this.state.loggedInUserId\n        const name = props.beach.name\n        const userbeach = {favbeach_id:favbeach_id, user_id:user_id, name:name}\n        const url = \"http://localhost:3000/userbeaches\"\n        fetch(url, {method: 'POST',\n        body:JSON.stringify(userbeach),\n        headers: {'content-type':'application/json'}\n        }).then(res => res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(res => {\n            console.log('Success:',res)\n            let userbeaches = this.state.userbeaches\n            userbeaches.push(userbeach)\n           this.setState({userbeaches:userbeaches})\n           props.history.push('/userbeaches')\n        })\n    }\n\n    deleteFromUBs = (beach) => {\n        const url = `http://localhost:3000/userbeaches/${beach.id}`\n        fetch(url, {method: 'DELETE'})\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n            let userbeaches = this.state.userbeaches.filter(userbeach => userbeach.id !== beach.id)\n            this.setState({userbeaches:userbeaches})\n        })  \n    }\n    \n    \n    render() {  \n        return (\n            <div>\n                    <div id=\"title\">\n                    CALIFORNIA BEACH FINDER\n                    </div>\n                    <div>\n                    <>\n                    {!!this.state.token\n                        ? <button id=\"logoutButton\" onClick={this.logOutClick}>Log Out</button>\n                        :\"\"\n                    }\n                    </>\n                    {!!this.state.token\n                        ? <Login token={this.state.token}\n                                    addData={this.addData}\n                                    loggedInUserId={this.state.loggedInUserId}/>\n                                    : <Login setToken={this.setToken}\n                                        addData={this.addData}\n                                    />\n                    }\n                    </div>\n                    <Route exact path={'/'} render= {(props) => \n                    <div id=\"search-bar\">\n                                <SearchForm {...props} \n                                grabBeaches={this.grabBeaches}\n                                queryCode={this.queryCode}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/'} render= {(props) => \n                    <div id=\"map-showcase\"> \n                        <MapContainer {...props}\n                        beaches={this.state.results} \n                        displayBeach={this.displayBeach}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/favbeach'} render= {(props) =>\n                   <div id=\"fav-beach\">\n                    <Favbeach id=\"favbeach\" {...props} \n                        beach={this.state.displayBeach}\n                        refreshBeaches={this.refreshBeaches}\n                        addBeachtoUBs={this.addBeachtoUBs}\n                        userBeaches={this.userBeaches}\n                    />\n                    </div>           \n                    }    \n                    /> \n\n                    <Route exact path={'/userbeaches'} render= {(props) => \n                    <div id=\"userbeaches\">\n                    <Userbeaches {...props}\n                    userbeaches={this.state.userbeaches}\n                    deleteFromUBs={this.deleteFromUBs}\n                    returnHome={this.returnHome}\n                    reviewBeach={this.reviewBeach}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render= {(props) =>\n                    <div id=\"reviewform roundbutton\">\n                    <ReviewForm {...props}\n                                displayBeach={this.state.displayBeach}\n                                addReview={this.addReview}\n                                returnHome={this.returnHome}\n                                user_id={this.state.loggedInUserId}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render={(props) =>\n                    <div id=\"reviews\">\n                    <Reviews {...props}\n                            reviews={this.state.reviews}\n                            beaches={this.state.results}\n                            deleteReview={this.deleteReview}\n                            updateReview={this.updateReview}\n                    />\n                    </div>}\n                    />\n            </div>    \n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}