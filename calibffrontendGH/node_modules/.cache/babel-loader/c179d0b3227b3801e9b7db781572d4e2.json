{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js\";\nimport React, { Component } from 'react';\nlet reviews;\nexport default class Reviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: [],\n      loaded: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        reviews: event.target.value\n      });\n    };\n  }\n\n  // reviewsLoaded = (reviews) =>{\n  //     if (reviews) {\n  //        this.setState({\n  //             loaded: true\n  //         })\n  //     }else{\n  //         this.setState({\n  //             loaded:false\n  //         })\n  //     }\n  // }\n  // renderReviews = () => {\n  //     // console.log(\"myreviews\", myReviews)\n  //     return reviews = myReviews.map((review)=>{\n  //             console.log(\"review.beach\", review.beach)\n  //             return <span key={review.id}>\n  //             <div>Beach Name:    \n  //                                {review.beach.name}</div>\n  //           <div>Beach Id:\n  //             {review.beach_id}\n  //              </div>\n  //           <textarea defaultValue={review.review} onChange={this.handleChange}>\n  //           </textarea>\n  //           <button onClick={()=>this.props.deleteReview(review.id)}\n  //           className=\"btn btn-info btn-sm\">Delete</button>\n  //           <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n  //           className=\"btn btn-warning btn-sm\">Update</button>\n  //           <br></br></span>\n  //             })\n  //         }\n  render() {\n    let reviewsArr = this.props.reviews.sort((a, b) => b.id - a.id);\n    const myReviews = reviewsArr.filter(review => review.user_id === this.props.user_id);\n    let reviews;\n\n    if (myReviews.length > 0) {\n      reviews = myReviews.map(review => {\n        return React.createElement(\"span\", {\n          key: review.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Beach Name:\", beach.name), React.createElement(\"textarea\", {\n          defaultValue: review.review,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: () => this.props.deleteReview(review.id),\n          className: \"btn btn-info btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(\"button\", {\n          onClick: () => this.props.updateReview(review, this.state.reviews),\n          className: \"btn btn-warning btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Update\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }));\n      });\n    } else {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Reviews of Beaches\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, reviews));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js"],"names":["React","Component","reviews","Reviews","state","loaded","handleChange","event","setState","target","value","render","reviewsArr","props","sort","a","b","id","myReviews","filter","review","user_id","length","map","beach","name","deleteReview","updateReview"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,OAAJ;AACA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE3CG,KAF2C,GAEnC;AACJF,MAAAA,OAAO,EAAC,EADJ;AAEJG,MAAAA,MAAM,EAAE;AAFJ,KAFmC;;AAAA,SAO3CC,YAP2C,GAO3BC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAACK,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACH,KAT0C;AAAA;;AAW3C;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AAEA;AACI;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGZC,EAAAA,MAAM,GAAG;AACO,QAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWX,OAAX,CAAmBY,IAAnB,CAAwB,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAA1C,CAAjB;AACA,UAAMC,SAAS,GAAGN,UAAU,CAACO,MAAX,CAAkBC,MAAM,IAAGA,MAAM,CAACC,OAAP,KAAmB,KAAKR,KAAL,CAAWQ,OAAzD,CAAlB;AAER,QAAInB,OAAJ;;AACA,QAAIgB,SAAS,CAACI,MAAV,GAAmB,CAAvB,EAAyB;AACzBpB,MAAAA,OAAO,GAAGgB,SAAS,CAACK,GAAV,CAAeH,MAAD,IAAU;AACnC,eAAO;AAAM,UAAA,GAAG,EAAEA,MAAM,CAACH,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACOO,KAAK,CAACC,IADb,CADQ,EAIR;AAAU,UAAA,YAAY,EAAEL,MAAM,CAACA,MAA/B;AAAuC,UAAA,QAAQ,EAAE,KAAKd,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJQ,EAMR;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKO,KAAL,CAAWa,YAAX,CAAwBN,MAAM,CAACH,EAA/B,CAArB;AACA,UAAA,SAAS,EAAC,qBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANQ,EAQR;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKJ,KAAL,CAAWc,YAAX,CAAwBP,MAAxB,EAAgC,KAAKhB,KAAL,CAAWF,OAA3C,CAArB;AACA,UAAA,SAAS,EAAC,wBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARQ,EAUR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVQ,CAAP;AAWA,OAZW,CAAV;AAaD,KAdC,MAcG;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAEH,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,OADD,CAHJ,CADJ;AAUH;;AA7E0C","sourcesContent":["import React, { Component } from 'react'\n\nlet reviews;\nexport default class Reviews extends Component {\n    \n    state = {\n        reviews:[],\n        loaded: false\n    };  \n    \n    handleChange = (event) => {\n        this.setState({reviews:event.target.value})\n    }\n    \n    // reviewsLoaded = (reviews) =>{\n    //     if (reviews) {\n    //        this.setState({\n    //             loaded: true\n    //         })\n    //     }else{\n    //         this.setState({\n        //             loaded:false\n        //         })\n        //     }\n        // }\n        \n        // renderReviews = () => {\n            //     // console.log(\"myreviews\", myReviews)\n            //     return reviews = myReviews.map((review)=>{\n                //             console.log(\"review.beach\", review.beach)\n                //             return <span key={review.id}>\n                //             <div>Beach Name:    \n                //                                {review.beach.name}</div>\n                //           <div>Beach Id:\n                //             {review.beach_id}\n                //              </div>\n                //           <textarea defaultValue={review.review} onChange={this.handleChange}>\n                //           </textarea>\n                //           <button onClick={()=>this.props.deleteReview(review.id)}\n                //           className=\"btn btn-info btn-sm\">Delete</button>\n                //           <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n                //           className=\"btn btn-warning btn-sm\">Update</button>\n                //           <br></br></span>\n                //             })\n                //         }\n                \n                \n    render() {\n                    let reviewsArr = this.props.reviews.sort((a,b) => b.id - a.id)\n                    const myReviews = reviewsArr.filter(review=> review.user_id === this.props.user_id)\n     \n            let reviews;\n            if (myReviews.length > 0){\n            reviews = myReviews.map((review)=>{\n           return <span key={review.id}>\n          <div>Beach Name:\n                {beach.name}\n             </div>\n          <textarea defaultValue={review.review} onChange={this.handleChange}>\n          </textarea>\n          <button onClick={()=>this.props.deleteReview(review.id)}\n          className=\"btn btn-info btn-sm\">Delete</button>\n          <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n          className=\"btn btn-warning btn-sm\">Update</button>\n          <br></br></span>\n          })\n          }else{\n              return <h2>Loading...</h2>\n          }\n        \n        return (\n            <div className=\"container reviews\" >\n            <div>Reviews of Beaches</div>\n                {/* <button>All Beach Reviews</button> */}\n                <div>\n                {reviews}\n            {/* {allReviews} */}\n                </div>\n            </div>\n            )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}