{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js\";\nimport React, { Component } from 'react';\nlet reviews;\nexport default class Reviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: [],\n      loaded: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        reviews: event.target.value\n      });\n    };\n\n    this.reviewsLoaded = () => {\n      if (this.props.reviews) {\n        this.setState({\n          loaded: true\n        });\n      }\n    };\n\n    this.renderReviews = () => {\n      let reviewsArr = this.props.reviews.sort((a, b) => b.id - a.id); // const myReviews = reviewsArr.filter(review=> review.user_id === this.props.user_id)\n      // console.log(\"myreviews\", myReviews)\n\n      reviews = reviewsArr.map(review => {\n        if (review.user_id === this.props.user_id) {\n          console.log(\"review.beach\", review.beach);\n          return React.createElement(\"span\", {\n            key: review.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, \"Beach Name:\", review.beach.name), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, \"Beach Id:\", review.beach_id), React.createElement(\"textarea\", {\n            defaultValue: review.review,\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            onClick: () => this.props.deleteReview(review.id),\n            className: \"btn btn-info btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, \"Delete\"), React.createElement(\"button\", {\n            onClick: () => this.props.updateReview(review, this.state.reviews),\n            className: \"btn btn-warning btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, \"Update\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }));\n        }\n      });\n    };\n  }\n\n  render() {\n    //     let reviews;\n    //     if (myReviews.length > 0){\n    //     reviews = myReviews.map((review)=>{\n    //    return <span key={review.id}>\n    //   <div>Beach Name:\n    //         {beach.name}\n    //      </div>\n    //   <textarea defaultValue={review.review} onChange={this.handleChange}>\n    //   </textarea>\n    //   <button onClick={()=>this.props.deleteReview(review.id)}\n    //   className=\"btn btn-info btn-sm\">Delete</button>\n    //   <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n    //   className=\"btn btn-warning btn-sm\">Update</button>\n    //   <br></br></span>\n    //   })\n    //   }else{\n    //       return <h2>Loading...</h2>\n    //   }\n    return React.createElement(\"div\", {\n      className: \"container reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Reviews of Beaches\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, !this.state.loaded ? console.log('se', this.reviewsLoaded()) : this.renderReviews(), reviews));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js"],"names":["React","Component","reviews","Reviews","state","loaded","handleChange","event","setState","target","value","reviewsLoaded","props","renderReviews","reviewsArr","sort","a","b","id","map","review","user_id","console","log","beach","name","beach_id","deleteReview","updateReview","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,OAAJ;AACA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE3CG,KAF2C,GAEnC;AACJF,MAAAA,OAAO,EAAC,EADJ;AAEJG,MAAAA,MAAM,EAAE;AAFJ,KAFmC;;AAAA,SAO3CC,YAP2C,GAO3BC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAACK,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACH,KAT0C;;AAAA,SAW3CC,aAX2C,GAW3B,MAAK;AACjB,UAAI,KAAKC,KAAL,CAAWV,OAAf,EAAwB;AACpB,aAAKM,QAAL,CAAc;AACVH,UAAAA,MAAM,EAAE;AADE,SAAd;AAGH;AACJ,KAjB0C;;AAAA,SAmB3CQ,aAnB2C,GAmB3B,MAAM;AAClB,UAAIC,UAAU,GAAG,KAAKF,KAAL,CAAWV,OAAX,CAAmBa,IAAnB,CAAwB,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAA1C,CAAjB,CADkB,CAElB;AACA;;AACAhB,MAAAA,OAAO,GAAGY,UAAU,CAACK,GAAX,CAAgBC,MAAD,IAAU;AAC/B,YAAIA,MAAM,CAACC,OAAP,KAAmB,KAAKT,KAAL,CAAWS,OAAlC,EAA0C;AACtCC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,MAAM,CAACI,KAAnC;AACA,iBAAO;AAAM,YAAA,GAAG,EAAEJ,MAAM,CAACF,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACoBE,MAAM,CAACI,KAAP,CAAaC,IADjC,CADO,EAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACGL,MAAM,CAACM,QADV,CAHS,EAMT;AAAU,YAAA,YAAY,EAAEN,MAAM,CAACA,MAA/B;AAAuC,YAAA,QAAQ,EAAE,KAAKd,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANS,EAQT;AAAQ,YAAA,OAAO,EAAE,MAAI,KAAKM,KAAL,CAAWe,YAAX,CAAwBP,MAAM,CAACF,EAA/B,CAArB;AACA,YAAA,SAAS,EAAC,qBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARS,EAUT;AAAQ,YAAA,OAAO,EAAE,MAAI,KAAKN,KAAL,CAAWgB,YAAX,CAAwBR,MAAxB,EAAgC,KAAKhB,KAAL,CAAWF,OAA3C,CAArB;AACA,YAAA,SAAS,EAAC,wBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVS,EAYT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZS,CAAP;AAaC;AACJ,OAjBK,CAAV;AAkBC,KAzCsC;AAAA;;AA2CvC2B,EAAAA,MAAM,GAAG;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC,KAAKzB,KAAL,CAAWC,MAAZ,GAAsBiB,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAmB,KAAKZ,aAAL,EAAnB,CAAtB,GAAiE,KAAKE,aAAL,EADlE,EAECX,OAFD,CAHJ,CADJ;AAWH;;AA3E0C","sourcesContent":["import React, { Component } from 'react'\n\nlet reviews;\nexport default class Reviews extends Component {\n    \n    state = {\n        reviews:[],\n        loaded: false\n    };  \n    \n    handleChange = (event) => {\n        this.setState({reviews:event.target.value})\n    }\n    \n    reviewsLoaded = () =>{\n        if (this.props.reviews) {\n            this.setState({\n                loaded: true\n            })\n        }\n    }\n    \n    renderReviews = () => {\n        let reviewsArr = this.props.reviews.sort((a,b) => b.id - a.id)\n        // const myReviews = reviewsArr.filter(review=> review.user_id === this.props.user_id)\n        // console.log(\"myreviews\", myReviews)\n        reviews = reviewsArr.map((review)=>{\n            if (review.user_id === this.props.user_id){\n                console.log(\"review.beach\", review.beach)\n                return <span key={review.id}>\n                <div>Beach Name:    \n                                   {review.beach.name}</div>\n              <div>Beach Id:\n                {review.beach_id}\n                 </div>\n              <textarea defaultValue={review.review} onChange={this.handleChange}>\n              </textarea>\n              <button onClick={()=>this.props.deleteReview(review.id)}\n              className=\"btn btn-info btn-sm\">Delete</button>\n              <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n              className=\"btn btn-warning btn-sm\">Update</button>\n              <br></br></span>\n                }\n            })\n        }\n        \n        render() {\n     \n        //     let reviews;\n        //     if (myReviews.length > 0){\n        //     reviews = myReviews.map((review)=>{\n        //    return <span key={review.id}>\n        //   <div>Beach Name:\n        //         {beach.name}\n        //      </div>\n        //   <textarea defaultValue={review.review} onChange={this.handleChange}>\n        //   </textarea>\n        //   <button onClick={()=>this.props.deleteReview(review.id)}\n        //   className=\"btn btn-info btn-sm\">Delete</button>\n        //   <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n        //   className=\"btn btn-warning btn-sm\">Update</button>\n        //   <br></br></span>\n        //   })\n        //   }else{\n        //       return <h2>Loading...</h2>\n        //   }\n        \n        return (\n            <div className=\"container reviews\" >\n            <div>Reviews of Beaches</div>\n                {/* <button>All Beach Reviews</button> */}\n                <div>\n                {!this.state.loaded ?  console.log('se',  this.reviewsLoaded()) : this.renderReviews() }\n                {reviews}\n            {/* {allReviews} */}\n                </div>\n            </div>\n            )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}