{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js\";\nimport React, { Component } from 'react';\nlet beach;\nexport default class Reviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: []\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        reviews: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const reviewsArr = this.props.reviews.sort((a, b) => b.id - a.id);\n    const myReviews = reviewsArr.filter(review => review.user_id === this.props.user_id);\n\n    const renderBeachObj = async () => {\n      return beach = await myReviews.beach;\n    };\n\n    renderBeachObj(); // console.log(\"myreviews\", myReviews)\n    // const allReviews = reviewsArr.map((review)=>{\n    //     if (review.user_id === this.props.user_id){\n    //         console.log(\"review beach name\", review.beach)\n    //         return <span key={review.id}>\n    //         <div>Beach Name: {this.renderBeachObj()}\n    //                             {beach.name}</div>\n    //       {/* <div>Beach Id:\n    //         {review.beach_id}\n    //          </div> */}\n    //       <textarea defaultValue={review.review} onChange={this.handleChange}>\n    //       </textarea>\n    //       <button onClick={()=>this.props.deleteReview(review.id)}\n    //       className=\"btn btn-info btn-sm\">Delete</button>\n    //       <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n    //       className=\"btn btn-warning btn-sm\">Update</button>\n    //       <br></br></span>\n    //         }else{\n    //             return <span>Loading...</span>\n    //         }\n    //     })\n\n    let reviews;\n\n    if (myReviews.length > 0) {\n      reviews = myReviews.map(review => {\n        return React.createElement(\"span\", {\n          key: review.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Beach Name:\", review.beach.name), React.createElement(\"textarea\", {\n          defaultValue: review.review,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: () => this.props.deleteReview(review.id),\n          className: \"btn btn-info btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(\"button\", {\n          onClick: () => this.props.updateReview(review, this.state.reviews),\n          className: \"btn btn-warning btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Update\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }));\n      });\n    } else {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Reviews of Beaches\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, reviews));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js"],"names":["React","Component","beach","Reviews","state","reviews","handleChange","event","setState","target","value","render","reviewsArr","props","sort","a","b","id","myReviews","filter","review","user_id","renderBeachObj","length","map","name","deleteReview","updateReview"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,KAAJ;AACA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE3CG,KAF2C,GAEnC;AACJC,MAAAA,OAAO,EAAC;AADJ,KAFmC;;AAAA,SAM3CC,YAN2C,GAM3BC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAACE,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACH,KAR0C;AAAA;;AAU3CC,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWR,OAAX,CAAmBS,IAAnB,CAAwB,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAA1C,CAAnB;AACA,UAAMC,SAAS,GAAGN,UAAU,CAACO,MAAX,CAAkBC,MAAM,IAAGA,MAAM,CAACC,OAAP,KAAmB,KAAKR,KAAL,CAAWQ,OAAzD,CAAlB;;AAEA,UAAMC,cAAc,GAAG,YAAW;AAC9B,aAAOpB,KAAK,GAAG,MAAMgB,SAAS,CAAChB,KAA/B;AACH,KAFD;;AAGAoB,IAAAA,cAAc,GAPT,CAQL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAIjB,OAAJ;;AACA,QAAIa,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAAyB;AACzBlB,MAAAA,OAAO,GAAGa,SAAS,CAACM,GAAV,CAAeJ,MAAD,IAAU;AACnC,eAAO;AAAM,UAAA,GAAG,EAAEA,MAAM,CAACH,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACOG,MAAM,CAAClB,KAAP,CAAauB,IADpB,CADQ,EAIR;AAAU,UAAA,YAAY,EAAEL,MAAM,CAACA,MAA/B;AAAuC,UAAA,QAAQ,EAAE,KAAKd,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJQ,EAMR;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKO,KAAL,CAAWa,YAAX,CAAwBN,MAAM,CAACH,EAA/B,CAArB;AACA,UAAA,SAAS,EAAC,qBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANQ,EAQR;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKJ,KAAL,CAAWc,YAAX,CAAwBP,MAAxB,EAAgC,KAAKhB,KAAL,CAAWC,OAA3C,CAArB;AACA,UAAA,SAAS,EAAC,wBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARQ,EAUR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVQ,CAAP;AAWA,OAZW,CAAV;AAaD,KAdC,MAcG;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAIH,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,OADD,CAHJ,CADJ;AAUH;;AAvE0C","sourcesContent":["import React, { Component } from 'react'\n\nlet beach;\nexport default class Reviews extends Component {\n    \n    state = {\n        reviews:[]\n    };  \n    \n    handleChange = (event) => {\n        this.setState({reviews:event.target.value})\n    }\n    \n    render() {\n        const reviewsArr = this.props.reviews.sort((a,b) => b.id - a.id)\n        const myReviews = reviewsArr.filter(review=> review.user_id === this.props.user_id)\n        \n        const renderBeachObj = async () =>{\n            return beach = await myReviews.beach\n        }\n        renderBeachObj()\n        // console.log(\"myreviews\", myReviews)\n        // const allReviews = reviewsArr.map((review)=>{\n        //     if (review.user_id === this.props.user_id){\n        //         console.log(\"review beach name\", review.beach)\n        //         return <span key={review.id}>\n        //         <div>Beach Name: {this.renderBeachObj()}\n        //                             {beach.name}</div>\n        //       {/* <div>Beach Id:\n        //         {review.beach_id}\n        //          </div> */}\n        //       <textarea defaultValue={review.review} onChange={this.handleChange}>\n        //       </textarea>\n        //       <button onClick={()=>this.props.deleteReview(review.id)}\n        //       className=\"btn btn-info btn-sm\">Delete</button>\n        //       <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n        //       className=\"btn btn-warning btn-sm\">Update</button>\n        //       <br></br></span>\n        //         }else{\n        //             return <span>Loading...</span>\n        //         }\n        //     })\n            \n            let reviews;\n            if (myReviews.length > 0){\n            reviews = myReviews.map((review)=>{\n           return <span key={review.id}>\n          <div>Beach Name:\n                {review.beach.name}\n             </div>\n          <textarea defaultValue={review.review} onChange={this.handleChange}>\n          </textarea>\n          <button onClick={()=>this.props.deleteReview(review.id)}\n          className=\"btn btn-info btn-sm\">Delete</button>\n          <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n          className=\"btn btn-warning btn-sm\">Update</button>\n          <br></br></span>\n          })\n          }else{\n              return <h2>Loading...</h2>\n          }\n            \n\n        \n        return (\n            <div className=\"container reviews\" >\n            <div>Reviews of Beaches</div>\n                {/* <button>All Beach Reviews</button> */}\n                <div>\n                {reviews}\n            {/* {allReviews} */}\n                </div>\n            </div>\n            )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}