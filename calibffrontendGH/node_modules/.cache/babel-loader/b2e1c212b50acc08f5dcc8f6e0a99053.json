{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport MapContainer from '../src/containers/mapcontainer';\nimport './index.css';\nimport SearchForm from '../src/components/searchform';\nimport Favbeach from '../src/components/favbeach';\nimport ReviewForm from '../src/components/reviewform';\nimport Reviews from '../src/components/reviews';\nimport Userbeaches from '../src/components/userbeaches';\nimport Login from './components/Login';\nimport { Route, Link } from 'react-router-dom';\nimport Beachchart from './components/beachchart';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userbeaches: [],\n      qLatLong: {},\n      reviews: [],\n      results: [],\n      rawBeaches: [],\n      displayBeach: [],\n      user: {\n        id: 1\n      },\n      geocode: {\n        lat: \"\",\n        long: \"\"\n      },\n      token: localStorage.token,\n      loggedInUserId: localStorage.userId,\n      name: localStorage.name\n    };\n\n    this.setToken = ({\n      token,\n      user_id,\n      name\n    }) => {\n      localStorage.token = token;\n      localStorage.userId = user_id;\n      localStorage.name = name;\n      this.setState({\n        token: token,\n        loggedInUserId: user_id,\n        name: name\n      });\n    };\n\n    this.logOutClick = () => {\n      // localStorage.userId = undefined\n      // localStorage.token = undefined\n      localStorage.clear();\n      this.setState({\n        loggedInUserId: null,\n        token: null\n      });\n    };\n\n    this.addReview = review => {\n      let reviews = this.state.reviews;\n      reviews.unshift(review);\n      this.setState({\n        reviews\n      });\n    };\n\n    this.deleteReview = review_id => {\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let reviews = this.state.reviews.filter(review => review.id !== review_id);\n        this.setState({\n          reviews: reviews\n        });\n      });\n    };\n\n    this.grabBeaches = async QlatLong => {\n      let rawBeaches = await fetch('http://localhost:3000/beaches');\n      let beaches = await rawBeaches.json();\n      let newBeaches = beaches.filter(beach => {\n        return parseFloat(beach.lat) <= QlatLong.lat + .05 && parseFloat(beach.lat) >= QlatLong.lat - .05;\n      }); // console.log(newBeaches)\n\n      this.setState({\n        results: newBeaches,\n        rawBeaches: beaches\n      });\n    };\n\n    this.queryCode = responseObj => {\n      let QlatLong = {};\n\n      if (responseObj.results.length > 0) {\n        QlatLong.lat = responseObj.results[0].geometry.location.lat;\n        QlatLong.lng = responseObj.results[0].geometry.location.lng;\n      } else {\n        alert(\"Your Please Resubmit your user Query\"); // QlatLong = {lat:37.8591,lng:122.4853}\n      } // console.log(\"default\", QlatLong)\n\n\n      this.grabBeaches(QlatLong);\n      this.setState({\n        qLatLong: QlatLong\n      });\n    };\n\n    this.displayBeach = (clickedBeach, props) => {\n      this.setState({\n        displayBeach: clickedBeach\n      }); // console.log(\"favbeach props\", props)\n\n      props.history.push('/favbeach');\n      console.log(\"clickedBeach\", clickedBeach);\n    };\n\n    this.reviewBeach = (props, beach_id) => {\n      if (!!props) {\n        props.history.push('/reviews');\n      } else {\n        return React.createElement(\"redirect\", {\n          to: {\n            pathname: \"/reviews\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.updateReview = (review, newReview) => {\n      console.log(review, newReview);\n      let review_id = review.id;\n      let reviewPatch = {\n        user_id: this.state.loggedInUserId,\n        favbeach_id: review.favbeach_id,\n        review: newReview\n      };\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'PATCH',\n        body: JSON.stringify(reviewPatch),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        return console.log(respObj);\n      });\n    };\n\n    this.addBeachtoUBs = async props => {\n      const favbeach_id = await props.beach.id;\n      console.log(\"favbeach_id\", props.beach.id);\n      const user_id = this.state.loggedInUserId;\n      const name = await props.beach.name;\n      const userbeach = {\n        favbeach_id: favbeach_id,\n        user_id: user_id,\n        name: name\n      };\n      const url = \"http://localhost:3000/userbeaches\";\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(userbeach),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(res => {\n        console.log('Success:', res);\n        let userbeaches = this.state.userbeaches;\n        userbeaches.push(userbeach);\n        this.setState({\n          userbeaches: userbeaches\n        }); //    props.history.push('/userbeaches')\n      });\n    };\n\n    this.deleteFromUBs = beach => {\n      const url = `http://localhost:3000/userbeaches/${beach.id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let userbeaches = this.state.userbeaches.filter(userbeach => userbeach.id !== beach.id);\n        this.setState({\n          userbeaches: userbeaches\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/reviews\").then(res => res.json()).then(resArr => {\n      this.setState({\n        reviews: resArr\n      });\n    });\n    fetch(\"http://localhost:3000/userbeaches\").then(res => res.json()).then(resArr => {\n      this.setState({\n        userbeaches: resArr\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"CALIFORNIA BEACH FINDER\", React.createElement(\"div\", {\n      className: \"navbuttonscontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"navbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Beach Finder Mainpage\")), React.createElement(Link, {\n      to: \"/beachchart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"navbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Beach Data Chart\")), React.createElement(Link, {\n      to: \"/userbeaches\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"navbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Favorite Beaches\")), React.createElement(Link, {\n      to: \"/reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"navbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Reviews\")), !!this.state.token ? React.createElement(Login, {\n      token: this.state.token,\n      setToken: this.setToken,\n      loggedInUserId: this.state.loggedInUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      setToken: this.setToken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(React.Fragment, null, !!this.state.token ? React.createElement(\"button\", {\n      id: \"logoutButton\",\n      onClick: this.logOutClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Log Out\") : \"\")), React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: props => React.createElement(\"div\", {\n        id: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(SearchForm, Object.assign({}, props, {\n        grabBeaches: this.grabBeaches,\n        queryCode: this.queryCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: props => {\n        return this.state.results.length === 0 ? React.createElement(\"div\", {\n          id: \"map-showcase\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(MapContainer, Object.assign({}, props, {\n          beaches: this.state.results,\n          qLatLong: this.state.qLatLong,\n          displayBeach: this.displayBeach,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }))) : React.createElement(\"div\", {\n          id: \"map-showcase\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(MapContainer, Object.assign({}, props, {\n          beaches: this.state.results,\n          displayBeach: this.displayBeach,\n          qLatLong: this.state.qLatLong,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        })), console.log(\"this.state.qLatLong\", this.state.qLatLong));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/favbeach',\n      render: props => React.createElement(\"div\", {\n        id: \"fav-beach\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Favbeach, Object.assign({\n        id: \"favbeach\"\n      }, props, {\n        beach: this.state.displayBeach,\n        refreshBeaches: this.refreshBeaches,\n        addBeachtoUBs: this.addBeachtoUBs,\n        userBeaches: this.userBeaches,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/userbeaches',\n      render: props => React.createElement(\"div\", {\n        id: \"userbeaches\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Userbeaches, Object.assign({}, props, {\n        userbeaches: this.state.userbeaches,\n        deleteFromUBs: this.deleteFromUBs,\n        returnHome: this.returnHome,\n        reviewBeach: this.reviewBeach,\n        user_id: this.state.loggedInUserId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/reviews',\n      render: props => React.createElement(\"div\", {\n        id: \"reviewform roundbutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(ReviewForm, Object.assign({}, props, {\n        displayBeach: this.state.displayBeach,\n        addReview: this.addReview,\n        returnHome: this.returnHome,\n        user_id: this.state.loggedInUserId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/reviews',\n      render: props => React.createElement(\"div\", {\n        id: \"reviews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Reviews, Object.assign({}, props, {\n        reviews: this.state.reviews,\n        beaches: this.state.results,\n        deleteReview: this.deleteReview,\n        updateReview: this.updateReview,\n        user_id: this.state.loggedInUserId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/beachchart',\n      render: props => React.createElement(\"div\", {\n        id: \"beachchart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Beachchart, Object.assign({}, props, {\n        rawBeaches: this.state.rawBeaches,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js"],"names":["React","Component","MapContainer","SearchForm","Favbeach","ReviewForm","Reviews","Userbeaches","Login","Route","Link","Beachchart","App","state","userbeaches","qLatLong","reviews","results","rawBeaches","displayBeach","user","id","geocode","lat","long","token","localStorage","loggedInUserId","userId","name","setToken","user_id","setState","logOutClick","clear","addReview","review","unshift","deleteReview","review_id","url","fetch","method","then","res","json","catch","error","console","respObj","filter","grabBeaches","QlatLong","beaches","newBeaches","beach","parseFloat","queryCode","responseObj","length","geometry","location","lng","alert","clickedBeach","props","history","push","log","reviewBeach","beach_id","pathname","updateReview","newReview","reviewPatch","favbeach_id","body","JSON","stringify","headers","addBeachtoUBs","userbeach","deleteFromUBs","componentDidMount","resArr","render","refreshBeaches","userBeaches","returnHome"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MapContainer from '../src/containers/mapcontainer'\nimport './index.css';\nimport SearchForm from '../src/components/searchform'\nimport Favbeach from '../src/components/favbeach'\nimport ReviewForm from '../src/components/reviewform'\nimport Reviews from '../src/components/reviews'\nimport Userbeaches from '../src/components/userbeaches'\nimport Login from './components/Login'\nimport {Route, Link} from 'react-router-dom'\nimport Beachchart from './components/beachchart'\n\n\nexport default class App extends Component {\n    state = {\n        userbeaches:[],\n        qLatLong:{},\n        reviews:[],\n        results:[],\n        rawBeaches:[],\n        displayBeach:[],\n        user: {\n            id: 1\n            },\n        geocode:{lat:\"\",\n                long:\"\"\n            },\n        token:localStorage.token,\n        loggedInUserId:localStorage.userId,\n        name:localStorage.name\n    }\n   \n    componentDidMount(){\n        fetch(\"http://localhost:3000/reviews\")\n        .then(res=> res.json())\n        .then(resArr=>{\n            this.setState({reviews:resArr})\n        })\n\n        fetch(\"http://localhost:3000/userbeaches\")\n        .then(res=> res.json())\n        .then(resArr=>{\n            this.setState({userbeaches:resArr})\n        })\n    }\n\n    \n    setToken = ({token, user_id, name}) => {\n        localStorage.token = token\n        localStorage.userId = user_id\n        localStorage.name = name\n        \n        this.setState({\n            token:token,\n            loggedInUserId:user_id,\n            name:name\n        })\n    }\n    \n    logOutClick = () => {\n        // localStorage.userId = undefined\n        // localStorage.token = undefined\n        localStorage.clear()\n        this.setState({\n            loggedInUserId: null,\n            token: null\n        })\n    }\n    \n\n    addReview = (review) => {\n        let reviews = this.state.reviews\n        reviews.unshift(review)\n        this.setState({reviews})\n    }\n   \n    deleteReview = (review_id) => {\n                            const url = `http://localhost:3000/reviews/${review_id}`\n                            fetch(url, {method: 'DELETE'})\n                            .then(res=>res.json())\n                            .catch(error=>console.error(\"Error:\", error))\n                            .then(respObj=>{\n                                let reviews = this.state.reviews.filter(review => review.id !== review_id)\n                                this.setState({reviews:reviews})\n                            })  \n                        }\n                        \n    grabBeaches = async (QlatLong) => {\n        let rawBeaches = await fetch('http://localhost:3000/beaches')\n        let beaches = await rawBeaches.json()\n        let newBeaches = beaches.filter(beach => {\n            return parseFloat(beach.lat) <= QlatLong.lat+.05 && \n            parseFloat(beach.lat) >= QlatLong.lat-.05\n        })\n        // console.log(newBeaches)\n        this.setState({results:newBeaches,\n                        rawBeaches:beaches})\n    }\n    \n\n    queryCode = (responseObj) => {\n        let QlatLong = {}\n        if (responseObj.results.length >0){\n            QlatLong.lat = responseObj.results[0].geometry.location.lat\n            QlatLong.lng =  responseObj.results[0].geometry.location.lng\n        }else{\n            alert(\"Your Please Resubmit your user Query\")\n            // QlatLong = {lat:37.8591,lng:122.4853}\n        }\n            // console.log(\"default\", QlatLong)\n        this.grabBeaches(QlatLong)\n        this.setState({qLatLong:QlatLong})\n    }\n\n    displayBeach = (clickedBeach, props) => {\n        this.setState({displayBeach:clickedBeach})\n        // console.log(\"favbeach props\", props)\n        props.history.push('/favbeach')\n        console.log(\"clickedBeach\",clickedBeach)\n    }\n\n    // userBeaches = (props) =>{\n    //     return <Link to='/userbeaches'>Userbeaches</Link>\n    //     // props.history.push('/userbeaches')\n    // }\n\n    // returnHome = (props) =>{\n    //     props.history.push('/')\n    // }\n    \n                         \n    reviewBeach = (props, beach_id) => {\n        if (!!props){\n        props.history.push('/reviews')\n        }else{\n            return < redirect to={{ pathname: \"/reviews\" }} />\n        }\n    }\n    // refreshBeaches = (event) => {\n    //     this.setState({displayBeach:[]})\n    // }\n    \n    updateReview = (review, newReview) => {\n        console.log(review, newReview)\n        let review_id = review.id\n        let reviewPatch = {user_id:this.state.loggedInUserId, favbeach_id:review.favbeach_id, review:newReview}\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method:'PATCH',\n            body:JSON.stringify(reviewPatch),\n            headers: {'content-type':'application/json'}\n            })\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n           return console.log(respObj)\n        })\n    }\n\n    addBeachtoUBs = async (props) => {\n        const favbeach_id = await props.beach.id\n        console.log(\"favbeach_id\", props.beach.id)\n        const user_id = this.state.loggedInUserId\n        const name = await props.beach.name\n        const userbeach = {favbeach_id:favbeach_id, user_id:user_id, name:name}\n        const url = \"http://localhost:3000/userbeaches\"\n        fetch(url, {method: 'POST',\n        body:JSON.stringify(userbeach),\n        headers: {'content-type':'application/json'}\n        }).then(res => res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(res => {\n            console.log('Success:',res)\n            let userbeaches = this.state.userbeaches\n            userbeaches.push(userbeach)\n           this.setState({userbeaches:userbeaches})\n        //    props.history.push('/userbeaches')\n        })\n    }\n\n    deleteFromUBs = (beach) => {\n        const url = `http://localhost:3000/userbeaches/${beach.id}`\n        fetch(url, {method: 'DELETE'})\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n            let userbeaches = this.state.userbeaches.filter(userbeach => userbeach.id !== beach.id)\n            this.setState({userbeaches:userbeaches})\n        })  \n    }\n    \n    \n    render() {  \n        return (\n            <div id=\"title\">\n                    CALIFORNIA BEACH FINDER\n                <div className=\"navbuttonscontainer\">\n                    <Link to=\"/\">\n                    <button className=\"navbutton\">\n                    Beach Finder Mainpage</button>\n                    </Link>\n                    <Link to=\"/beachchart\">\n                    <button className=\"navbutton\">\n                    Beach Data Chart</button>\n                    </Link>\n                    <Link to=\"/userbeaches\">\n                    <button className=\"navbutton\">Favorite Beaches</button>\n                    </Link>\n                    <Link to=\"/reviews\">\n                    <button className=\"navbutton\">Reviews</button>\n                    </Link>\n\n                \n                    {!!this.state.token\n                                    ? <Login \n                                    token={this.state.token}\n                                    setToken={this.setToken}\n                                    loggedInUserId={this.state.loggedInUserId}/>\n                                    : <Login setToken={this.setToken}\n                                    />\n                    }\n                    <>\n                    {!!this.state.token\n                        ? <button id=\"logoutButton\" onClick={this.logOutClick}>Log Out</button>\n                        :\"\"\n                    }\n                    </>\n                    </div>\n                    <Route exact path={'/'} render= {(props) => \n                    <div id=\"search-bar\">\n                                <SearchForm {...props} \n                                grabBeaches={this.grabBeaches}\n                                queryCode={this.queryCode}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/'} render= {(props) => \n                        {return this.state.results.length === 0 \n                        ? \n                        <div id=\"map-showcase\">\n                        <MapContainer {...props} \n                        beaches={this.state.results} \n                        qLatLong={this.state.qLatLong}\n                        displayBeach={this.displayBeach}/>\n                        </div> \n                        :\n                        <div id=\"map-showcase\"> \n                        <MapContainer {...props}\n                        beaches={this.state.results} \n                        displayBeach={this.displayBeach}\n                        qLatLong={this.state.qLatLong}\n                    />\n                     {console.log(\"this.state.qLatLong\", this.state.qLatLong)}\n                    </div>\n                    }\n                    }\n                    />\n\n                    <Route exact path={'/favbeach'} render= {(props) =>\n                   <div id=\"fav-beach\">\n                    <Favbeach id=\"favbeach\" {...props} \n                        beach={this.state.displayBeach}\n                        refreshBeaches={this.refreshBeaches}\n                        addBeachtoUBs={this.addBeachtoUBs}\n                        userBeaches={this.userBeaches}\n                    />\n                    </div>           \n                    }    \n                    /> \n\n                    <Route exact path={'/userbeaches'} render= {(props) => \n                    <div id=\"userbeaches\">\n                    <Userbeaches {...props}\n                    userbeaches={this.state.userbeaches}\n                    deleteFromUBs={this.deleteFromUBs}\n                    returnHome={this.returnHome}\n                    reviewBeach={this.reviewBeach}\n                    user_id={this.state.loggedInUserId}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render= {(props) =>\n                    <div id=\"reviewform roundbutton\">\n                    <ReviewForm {...props}\n                                displayBeach={this.state.displayBeach}\n                                addReview={this.addReview}\n                                returnHome={this.returnHome}\n                                user_id={this.state.loggedInUserId}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render={(props) =>\n                    <div id=\"reviews\">\n                    <Reviews {...props}\n                            reviews={this.state.reviews}\n                            beaches={this.state.results}\n                            deleteReview={this.deleteReview}\n                            updateReview={this.updateReview}\n                            user_id={this.state.loggedInUserId}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/beachchart'} render={(props) =>\n                    <div id=\"beachchart\">\n                    <Beachchart {...props}\n                       rawBeaches={this.state.rawBeaches}\n                    />\n                    </div>}\n                    />\n           \n        </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}