{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js\";\nimport React, { Component } from 'react';\nlet reviews;\nexport default class Reviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: [],\n      loaded: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        reviews: event.target.value\n      });\n    };\n\n    this.reviewsLoaded = reviews => {\n      return;\n\n      if (reviews) {\n        this.setState({\n          loaded: true\n        });\n      } else {\n        this.setState({\n          loaded: false\n        });\n      }\n    };\n\n    this.renderReviews = () => {\n      let reviewsArr = this.props.reviews.sort((a, b) => b.id - a.id);\n      const myReviews = reviewsArr.filter(review => review.user_id === this.props.user_id); // console.log(\"myreviews\", myReviews)\n\n      return reviews = myReviews.map(review => {\n        console.log(\"review.beach\", review.beach);\n        return React.createElement(\"span\", {\n          key: review.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Beach Name:\", review.beach.name), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Beach Id:\", review.beach_id), React.createElement(\"textarea\", {\n          defaultValue: review.review,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: () => this.props.deleteReview(review.id),\n          className: \"btn btn-info btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(\"button\", {\n          onClick: () => this.props.updateReview(review, this.state.reviews),\n          className: \"btn btn-warning btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Update\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      });\n    };\n  }\n\n  render() {\n    //     let reviews;\n    //     if (myReviews.length > 0){\n    //     reviews = myReviews.map((review)=>{\n    //    return <span key={review.id}>\n    //   <div>Beach Name:\n    //         {beach.name}\n    //      </div>\n    //   <textarea defaultValue={review.review} onChange={this.handleChange}>\n    //   </textarea>\n    //   <button onClick={()=>this.props.deleteReview(review.id)}\n    //   className=\"btn btn-info btn-sm\">Delete</button>\n    //   <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n    //   className=\"btn btn-warning btn-sm\">Update</button>\n    //   <br></br></span>\n    //   })\n    //   }else{\n    //       return <h2>Loading...</h2>\n    //   }\n    return React.createElement(\"div\", {\n      className: \"container reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Reviews of Beaches\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, !this.state.loaded ? console.log('se', this.reviewsLoaded(this.props.reviews)) : this.renderReviews(), reviews));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js"],"names":["React","Component","reviews","Reviews","state","loaded","handleChange","event","setState","target","value","reviewsLoaded","renderReviews","reviewsArr","props","sort","a","b","id","myReviews","filter","review","user_id","map","console","log","beach","name","beach_id","deleteReview","updateReview","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nlet reviews;\nexport default class Reviews extends Component {\n    \n    state = {\n        reviews:[],\n        loaded: false\n    };  \n    \n    handleChange = (event) => {\n        this.setState({reviews:event.target.value})\n    }\n    \n    reviewsLoaded = (reviews) =>{\n        return\n        if (reviews) {\n           this.setState({\n                loaded: true\n            })\n        }else{\n            this.setState({\n                loaded:false\n            })\n        }\n    }\n    \n    renderReviews = () => {\n        let reviewsArr = this.props.reviews.sort((a,b) => b.id - a.id)\n        const myReviews = reviewsArr.filter(review=> review.user_id === this.props.user_id)\n        // console.log(\"myreviews\", myReviews)\n        return reviews = myReviews.map((review)=>{\n                console.log(\"review.beach\", review.beach)\n                return <span key={review.id}>\n                <div>Beach Name:    \n                                   {review.beach.name}</div>\n              <div>Beach Id:\n                {review.beach_id}\n                 </div>\n              <textarea defaultValue={review.review} onChange={this.handleChange}>\n              </textarea>\n              <button onClick={()=>this.props.deleteReview(review.id)}\n              className=\"btn btn-info btn-sm\">Delete</button>\n              <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n              className=\"btn btn-warning btn-sm\">Update</button>\n              <br></br></span>\n                })\n            }\n        \n        \n        render() {\n     \n        //     let reviews;\n        //     if (myReviews.length > 0){\n        //     reviews = myReviews.map((review)=>{\n        //    return <span key={review.id}>\n        //   <div>Beach Name:\n        //         {beach.name}\n        //      </div>\n        //   <textarea defaultValue={review.review} onChange={this.handleChange}>\n        //   </textarea>\n        //   <button onClick={()=>this.props.deleteReview(review.id)}\n        //   className=\"btn btn-info btn-sm\">Delete</button>\n        //   <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n        //   className=\"btn btn-warning btn-sm\">Update</button>\n        //   <br></br></span>\n        //   })\n        //   }else{\n        //       return <h2>Loading...</h2>\n        //   }\n        \n        return (\n            <div className=\"container reviews\" >\n            <div>Reviews of Beaches</div>\n                {/* <button>All Beach Reviews</button> */}\n                <div>\n                {!this.state.loaded ?  console.log('se',  this.reviewsLoaded(this.props.reviews)) : this.renderReviews() }\n                {reviews}\n            {/* {allReviews} */}\n                </div>\n            </div>\n            )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}