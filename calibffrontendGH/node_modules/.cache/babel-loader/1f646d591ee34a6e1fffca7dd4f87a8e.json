{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/searchbar.js\";\nimport React, { Component } from 'react';\nimport SearchBar from 'material-ui-search-bar';\nimport Script from 'react-load-script';\nimport '../index.css';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: '',\n      query: ''\n    };\n\n    this.handlePlaceSelect = () => {\n      // Extract City From Address Object\n      const addressObject = this.autocomplete.getPlace();\n      const address = addressObject.address_components; // Check if address is valid\n\n      if (address) {\n        // Set State\n        this.setState({\n          city: address[0].long_name,\n          query: addressObject.formatted_address\n        });\n      }\n    };\n  }\n\n  handleScriptLoad() {\n    // Declare Options For Autocomplete \n    const options = {\n      types: [\"(cities)\"]\n    }; // Initialize Google Autocomplete \n\n    /*global google*/\n\n    let autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), options); // Avoid paying for data that you don't need by restricting the \n    // set of place fields that are returned to just the address\n    // components and formatted address\n\n    autocomplete.setFields(['address_components', 'formatted_address']); // Fire Event when a suggested name is selected\n\n    autocomplete.addListener('place_changed', this.handlePlaceSelect);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Script, {\n      url: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCrN9OLFD2SSP9_lYIqcGINzsOJ1iAJ7fM&libraries=places\",\n      onLoad: this.handleScriptLoad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      id: \"autocomplete\",\n      placeholder: \"\",\n      hintText: \"Search City\",\n      value: this.state.query,\n      style: {\n        height: -200,\n        margin: '300 auto',\n        maxWidth: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/searchbar.js"],"names":["React","Component","SearchBar","Script","Search","state","city","query","handlePlaceSelect","addressObject","autocomplete","getPlace","address","address_components","setState","long_name","formatted_address","handleScriptLoad","options","types","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","render","height","margin","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,cAAP;;AAGA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACJC,MAAAA,IAAI,EAAC,EADD;AAEJC,MAAAA,KAAK,EAAC;AAFF,KADmB;;AAAA,SAyB3BC,iBAzB2B,GAyBP,MAAM;AACtB;AACA,YAAMC,aAAa,GAAG,KAAKC,YAAL,CAAkBC,QAAlB,EAAtB;AACA,YAAMC,OAAO,GAAGH,aAAa,CAACI,kBAA9B,CAHsB,CAKtB;;AACA,UAAID,OAAJ,EAAa;AACX;AACA,aAAKE,QAAL,CACE;AACER,UAAAA,IAAI,EAAEM,OAAO,CAAC,CAAD,CAAP,CAAWG,SADnB;AAEER,UAAAA,KAAK,EAAEE,aAAa,CAACO;AAFvB,SADF;AAMD;AACF,KAxCwB;AAAA;;AAM3BC,EAAAA,gBAAgB,GAAE;AAChB;AACJ,UAAMC,OAAO,GAAG;AAAEC,MAAAA,KAAK,EAAC,CAAC,UAAD;AAAR,KAAhB,CAFoB,CAIpB;;AACA;;AACA,QAAIT,YAAY,GAAG,IAAIU,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CACGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CADH,EAEGP,OAFH,CAAnB,CANoB,CASpB;AACA;AACA;;AACAR,IAAAA,YAAY,CAACgB,SAAb,CAAuB,CAAC,oBAAD,EACM,mBADN,CAAvB,EAZoB,CAcpB;;AACAhB,IAAAA,YAAY,CAACiB,WAAb,CAAyB,eAAzB,EAC8B,KAAKnB,iBADnC;AAEG;;AAmBDoB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,sGAAZ;AACI,MAAA,MAAM,EAAE,KAAKX,gBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAKA,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,cADP;AAEI,MAAA,WAAW,EAAC,EAFhB;AAGI,MAAA,QAAQ,EAAC,aAHb;AAII,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,KAJtB;AAKI,MAAA,KAAK,EAAE;AACHsB,QAAAA,MAAM,EAAE,CAAC,GADN;AAEHC,QAAAA,MAAM,EAAE,UAFL;AAGHC,QAAAA,QAAQ,EAAE;AAHP,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADJ;AAmBH;;AA9D0B;;AAkE/B,eAAe3B,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport SearchBar from 'material-ui-search-bar';\nimport Script from 'react-load-script';\nimport '../index.css';\n\n\nclass Search extends Component {\n    state = {\n        city:'',\n        query:''\n    }\n\n    handleScriptLoad(){\n      // Declare Options For Autocomplete \n  const options = { types:[\"(cities)\"]}; \n  \n  // Initialize Google Autocomplete \n  /*global google*/\n  let autocomplete = new google.maps.places.Autocomplete(\n                        document.getElementById('autocomplete'),\n                        options );\n  // Avoid paying for data that you don't need by restricting the \n  // set of place fields that are returned to just the address\n  // components and formatted address\n  autocomplete.setFields(['address_components',   \n                               'formatted_address']);\n  // Fire Event when a suggested name is selected\n  autocomplete.addListener('place_changed',\n                                this.handlePlaceSelect);  \n    }\n\n    handlePlaceSelect = () => {\n        // Extract City From Address Object\n        const addressObject = this.autocomplete.getPlace();\n        const address = addressObject.address_components;\n    \n        // Check if address is valid\n        if (address) {\n          // Set State\n          this.setState(\n            {\n              city: address[0].long_name,\n              query: addressObject.formatted_address,\n            }\n          );\n        }\n      }\n\n    render() {\n        return (\n            <div id=\"search-bar\">\n            <Script url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCrN9OLFD2SSP9_lYIqcGINzsOJ1iAJ7fM&libraries=places\"\n                onLoad={this.handleScriptLoad}        \n            /> \n\n            <SearchBar \n                id=\"autocomplete\" \n                placeholder=\"\" \n                hintText=\"Search City\" \n                value={this.state.query} \n                style={{\n                    height: -200,\n                    margin: '300 auto',\n                    maxWidth: 100\n                }}               \n                />\n            </div>\n        )\n    }\n}\n\n\nexport default Search"]},"metadata":{},"sourceType":"module"}