{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport MapContainer from '../src/containers/mapcontainer';\nimport './index.css';\nimport SearchForm from '../src/components/searchform.js'; // import FavBeaches from '../src/components/favbeaches'\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import MainDisplay from './src/containers/main?display'\n// import Map from './src/containers/map'\n// import SearchBar from '../src/components/searchbar'\n\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: [],\n      geocode: {\n        lat: \"\",\n        long: \"\"\n      }\n    };\n\n    this.grabBeaches = async QlatLong => {\n      let rawBeaches = await fetch('http://localhost:3000/favbeaches');\n      let beaches = await rawBeaches.json();\n      let fbeach = beaches.filter(beach => {\n        if (parseFloat(beach.lat) <= QlatLong[0] + .005 && parseFloat(beach.lat) >= QlatLong[0] - .005) {\n          return beach;\n        } else {\n          if (beach.length > 0) {\n            return beaches[0];\n          } else {\n            beach = \"banana\";\n          }\n        }\n      });\n      let prevBeaches = this.state.results;\n      console.log(fbeach);\n      prevBeaches.push(fbeach);\n      this.setState({\n        results: prevBeaches\n      });\n    };\n\n    this.queryCode = responseObj => {\n      let QlatLong = [];\n\n      if (responseObj.length > 0) {\n        QlatLong.push(responseObj.results[0].geometry.location.lat, responseObj.results[0].geometry.location.lng);\n      } else {\n        QlatLong = {\n          lat: 37.8591,\n          lng: 122.4853\n        };\n      } // console.log(QlatLong)\n\n\n      this.grabBeaches(QlatLong);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      grabBeaches: this.grabBeaches,\n      queryCode: this.queryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"map-showcase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      beaches: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js"],"names":["React","Component","MapContainer","SearchForm","App","state","results","geocode","lat","long","grabBeaches","QlatLong","rawBeaches","fetch","beaches","json","fbeach","filter","beach","parseFloat","length","prevBeaches","console","log","push","setState","queryCode","responseObj","geometry","location","lng","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,iCAAvB,C,CACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACvCI,KADuC,GAC/B;AACJC,MAAAA,OAAO,EAAC,EADJ;AAEJC,MAAAA,OAAO,EAAC;AAACC,QAAAA,GAAG,EAAC,EAAL;AACAC,QAAAA,IAAI,EAAC;AADL;AAFJ,KAD+B;;AAAA,SAOvCC,WAPuC,GAOzB,MAAOC,QAAP,IAAoB;AAC9B,UAAIC,UAAU,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA5B;AACA,UAAIC,OAAO,GAAG,MAAMF,UAAU,CAACG,IAAX,EAApB;AACA,UAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,CAAeC,KAAK,IAAI;AAAC,YACjCC,UAAU,CAACD,KAAK,CAACV,GAAP,CAAV,IAAyBG,QAAQ,CAAC,CAAD,CAAR,GAAY,IAArC,IACDQ,UAAU,CAACD,KAAK,CAACV,GAAP,CAAV,IAAyBG,QAAQ,CAAC,CAAD,CAAR,GAAY,IAFH,EAGlC;AAAC,iBAAOO,KAAP;AAAa,SAHoB,MAGhB;AACd,cAAIA,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAqB;AACrB,mBAAON,OAAO,CAAC,CAAD,CAAd;AAAkB,WADlB,MACsB;AAACI,YAAAA,KAAK,GAAG,QAAR;AAAiB;AAC3C;AACJ,OAPY,CAAb;AAQA,UAAIG,WAAW,GAAG,KAAKhB,KAAL,CAAWC,OAA7B;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAK,MAAAA,WAAW,CAACG,IAAZ,CAAiBR,MAAjB;AACA,WAAKS,QAAL,CAAc;AAACnB,QAAAA,OAAO,EAACe;AAAT,OAAd;AACH,KAtBsC;;AAAA,SAwBvCK,SAxBuC,GAwB1BC,WAAD,IAAiB;AACzB,UAAIhB,QAAQ,GAAG,EAAf;;AACA,UAAIgB,WAAW,CAACP,MAAZ,GAAoB,CAAxB,EAA0B;AAC1BT,QAAAA,QAAQ,CAACa,IAAT,CAAcG,WAAW,CAACrB,OAAZ,CAAoB,CAApB,EAAuBsB,QAAvB,CAAgCC,QAAhC,CAAyCrB,GAAvD,EACImB,WAAW,CAACrB,OAAZ,CAAoB,CAApB,EAAuBsB,QAAvB,CAAgCC,QAAhC,CAAyCC,GAD7C;AAEC,OAHD,MAGK;AAACnB,QAAAA,QAAQ,GAAG;AAACH,UAAAA,GAAG,EAAC,OAAL;AAAasB,UAAAA,GAAG,EAAC;AAAjB,SAAX;AAAsC,OALnB,CAMrB;;;AACJ,WAAKpB,WAAL,CAAiBC,QAAjB;AACH,KAhCsC;AAAA;;AAmCvCoB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE,KAAKrB,WAA9B;AACY,MAAA,SAAS,EAAE,KAAKgB,SAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADR,EAOQ;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAPR,CADJ;AAiBH;;AArDsC","sourcesContent":["import React, { Component } from 'react'\nimport MapContainer from '../src/containers/mapcontainer'\nimport './index.css';\nimport SearchForm from '../src/components/searchform.js'\n// import FavBeaches from '../src/components/favbeaches'\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import MainDisplay from './src/containers/main?display'\n// import Map from './src/containers/map'\n// import SearchBar from '../src/components/searchbar'\nexport default class App extends Component {\n    state = {\n        results:[],\n        geocode:{lat:\"\",\n                long:\"\"}\n    }\n\n    grabBeaches = async (QlatLong) => {\n        let rawBeaches = await fetch('http://localhost:3000/favbeaches')\n        let beaches = await rawBeaches.json()\n        let fbeach = beaches.filter(beach => {if\n            (parseFloat(beach.lat) <= QlatLong[0]+.005 && \n            parseFloat(beach.lat) >= QlatLong[0]-.005) \n            {return beach}else{\n                if (beach.length > 0){\n                return beaches[0]}else{beach = \"banana\"}\n            }\n        })\n        let prevBeaches = this.state.results\n        console.log(fbeach)\n        prevBeaches.push(fbeach)        \n        this.setState({results:prevBeaches})\n    }\n\n    queryCode = (responseObj) => {\n        let QlatLong = []\n        if (responseObj.length >0){\n        QlatLong.push(responseObj.results[0].geometry.location.lat, \n            responseObj.results[0].geometry.location.lng)\n        }else{QlatLong = {lat:37.8591,lng:122.4853}}\n            // console.log(QlatLong)\n        this.grabBeaches(QlatLong)\n    }\n\n\n    render() {  \n        return (\n            <div>\n                    <div id=\"search-bar\">\n                    <SearchForm grabBeaches={this.grabBeaches}\n                                queryCode={this.queryCode}\n                    />\n                    </div>\n\n                    <div id=\"map-showcase\"> \n                    {/* <FavBeaches/>                 */}\n                    <MapContainer beaches={this.state.results}/>\n                    </div>\n                    {/* <MuiThemeProvider>\n                    <SearchBar/>\n                    </MuiThemeProvider> */}\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}