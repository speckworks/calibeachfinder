{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport MapContainer from '../src/containers/mapcontainer';\nimport './index.css';\nimport SearchForm from '../src/components/searchform';\nimport Favbeach from '../src/components/favbeach';\nimport ReviewForm from '../src/components/reviewform';\nimport Reviews from '../src/components/reviews';\nimport Userbeaches from '../src/components/userbeaches';\nimport Login from './components/Login';\nimport { Route, Switch } from 'react-router-dom';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userbeaches: [],\n      reviews: [],\n      results: [],\n      displayBeach: [],\n      user: {\n        id: 1\n      },\n      geocode: {\n        lat: \"\",\n        long: \"\"\n      },\n      token: null,\n      loggedInUserId: null\n    };\n\n    this.setToken = ({\n      token,\n      user_id\n    }) => {\n      localStorage.token = token;\n      localStorage.userId = user_id;\n      this.setState({\n        token: token,\n        loggedInUserId: user_id\n      });\n    };\n\n    this.logOutClick = () => {\n      localStorage.userId = undefined;\n      localStorage.token = undefined;\n      this.setState({\n        loggedInUserId: null,\n        token: null\n      });\n    };\n\n    this.addReview = review => {\n      let reviews = this.state.reviews;\n      reviews.unshift(review);\n      this.setState({\n        reviews\n      });\n    };\n\n    this.deleteReview = review_id => {\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let reviews = this.state.reviews.filter(review => review.id !== review_id);\n        this.setState({\n          reviews: reviews\n        });\n      });\n    };\n\n    this.reviewBeach = (props, beach_id) => {\n      props.history.push('/reviews');\n    };\n\n    this.grabBeaches = async QlatLong => {\n      let rawBeaches = await fetch('http://localhost:3000/favbeaches');\n      let beaches = await rawBeaches.json();\n      let newBeaches = beaches.filter(beach => {\n        return parseFloat(beach.lat) <= QlatLong.lat + .05 && parseFloat(beach.lat) >= QlatLong.lat - .05;\n      }); // console.log(newBeaches)\n\n      this.setState({\n        results: newBeaches\n      });\n    };\n\n    this.queryCode = responseObj => {\n      let QlatLong = {};\n\n      if (responseObj.results.length > 0) {\n        QlatLong.lat = responseObj.results[0].geometry.location.lat;\n        QlatLong.lng = responseObj.results[0].geometry.location.lng;\n      } else {\n        alert(\"Your Please Resubmit your user Query\"); // QlatLong = {lat:37.8591,lng:122.4853}\n      }\n\n      console.log(\"default\", QlatLong);\n      this.grabBeaches(QlatLong);\n    };\n\n    this.displayBeach = (clickedBeach, props) => {\n      this.setState({\n        displayBeach: clickedBeach\n      }); // console.log(\"favbeach props\", props)\n\n      props.history.push('/favbeach');\n      console.log(\"clickedBeach\", clickedBeach);\n    };\n\n    this.userBeaches = props => {\n      props.history.push('/userbeaches');\n    };\n\n    this.returnHome = props => {\n      props.history.push('/');\n    };\n\n    this.updateReview = (review, newReview) => {\n      console.log(review, newReview);\n      let review_id = review.id;\n      let reviewPatch = {\n        user_id: 1,\n        favbeach_id: review.favbeach_id,\n        review: newReview\n      };\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'PATCH',\n        body: JSON.stringify(reviewPatch),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        return console.log(respObj);\n      });\n    };\n\n    this.addBeachtoUBs = props => {\n      const favbeach_id = props.beach.id;\n      const user_id = 1;\n      const name = props.beach.name;\n      const userbeach = {\n        favbeach_id: favbeach_id,\n        user_id: user_id,\n        name: name\n      };\n      const url = \"http://localhost:3000/userbeaches\";\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(userbeach),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(res => {\n        console.log('Success:', res);\n        let userbeaches = this.state.userbeaches;\n        userbeaches.push(userbeach);\n        this.setState({\n          userbeaches: userbeaches\n        });\n        props.history.push('/userbeaches');\n      });\n    };\n\n    this.deleteFromUBs = beach => {\n      const url = `http://localhost:3000/userbeaches/${beach.id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let userbeaches = this.state.userbeaches.filter(userbeach => userbeach.id !== beach.id);\n        this.setState({\n          userbeaches: userbeaches\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/reviews\").then(res => res.json()).then(resObj => {\n      console.log(resObj);\n      this.setState({\n        reviews: resObj\n      });\n    });\n    fetch(\"http://localhost:3000/userbeaches\").then(res => res.json()).then(resObj => {\n      console.log(resObj);\n      this.setState({\n        userbeaches: resObj\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"CALIFORNIA BEACH FINDER\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, !!this.state.token ? React.createElement(\"button\", {\n      onClick: this.logOutClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Log Out\") : \"\"), !!this.state.token ? React.createElement(Login, {\n      token: this.state.token,\n      loggedInUserId: this.state.loggedInUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      setToken: this.setToken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: props => React.createElement(\"div\", {\n        id: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(SearchForm, Object.assign({}, props, {\n        grabBeaches: this.grabBeaches,\n        queryCode: this.queryCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: props => React.createElement(\"div\", {\n        id: \"map-showcase app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(MapContainer, Object.assign({}, props, {\n        beaches: this.state.results,\n        displayBeach: this.displayBeach,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/favbeach',\n      render: props => React.createElement(\"div\", {\n        id: \"fav-beach\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Favbeach, Object.assign({\n        id: \"favbeach\"\n      }, props, {\n        beach: this.state.displayBeach,\n        refreshBeaches: this.refreshBeaches,\n        addBeachtoUBs: this.addBeachtoUBs,\n        userBeaches: this.userBeaches,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/userbeaches',\n      render: props => React.createElement(\"div\", {\n        id: \"userbeaches\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Userbeaches, Object.assign({}, props, {\n        userbeaches: this.state.userbeaches,\n        deleteFromUBs: this.deleteFromUBs,\n        returnHome: this.returnHome,\n        reviewBeach: this.reviewBeach,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/reviews',\n      render: props => React.createElement(\"div\", {\n        id: \"reviewform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(ReviewForm, Object.assign({}, props, {\n        displayBeach: this.state.displayBeach,\n        addReview: this.addReview,\n        returnHome: this.returnHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/reviews',\n      render: props => React.createElement(\"div\", {\n        id: \"reviews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Reviews, Object.assign({}, props, {\n        reviews: this.state.reviews,\n        beaches: this.state.results,\n        deleteReview: this.deleteReview,\n        updateReview: this.updateReview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js"],"names":["React","Component","MapContainer","SearchForm","Favbeach","ReviewForm","Reviews","Userbeaches","Login","Route","Switch","App","state","userbeaches","reviews","results","displayBeach","user","id","geocode","lat","long","token","loggedInUserId","setToken","user_id","localStorage","userId","setState","logOutClick","undefined","addReview","review","unshift","deleteReview","review_id","url","fetch","method","then","res","json","catch","error","console","respObj","filter","reviewBeach","props","beach_id","history","push","grabBeaches","QlatLong","rawBeaches","beaches","newBeaches","beach","parseFloat","queryCode","responseObj","length","geometry","location","lng","alert","log","clickedBeach","userBeaches","returnHome","updateReview","newReview","reviewPatch","favbeach_id","body","JSON","stringify","headers","addBeachtoUBs","name","userbeach","deleteFromUBs","componentDidMount","resObj","render","refreshBeaches"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AAGA,eAAe,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACvCW,KADuC,GAC/B;AACJC,MAAAA,WAAW,EAAC,EADR;AAEJC,MAAAA,OAAO,EAAC,EAFJ;AAGJC,MAAAA,OAAO,EAAC,EAHJ;AAIJC,MAAAA,YAAY,EAAC,EAJT;AAKJC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAE;AADF,OALF;AAQJC,MAAAA,OAAO,EAAC;AAACC,QAAAA,GAAG,EAAC,EAAL;AACAC,QAAAA,IAAI,EAAC;AADL,OARJ;AAWJC,MAAAA,KAAK,EAAC,IAXF;AAYJC,MAAAA,cAAc,EAAE;AAZZ,KAD+B;;AAAA,SAgCvCC,QAhCuC,GAgC5B,CAAC;AAACF,MAAAA,KAAD;AAAQG,MAAAA;AAAR,KAAD,KAAsB;AAC7BC,MAAAA,YAAY,CAACJ,KAAb,GAAqBA,KAArB;AACAI,MAAAA,YAAY,CAACC,MAAb,GAAsBF,OAAtB;AAEA,WAAKG,QAAL,CAAc;AACVN,QAAAA,KAAK,EAACA,KADI;AAEVC,QAAAA,cAAc,EAACE;AAFL,OAAd;AAIH,KAxCsC;;AAAA,SA0CvCI,WA1CuC,GA0CzB,MAAM;AAChBH,MAAAA,YAAY,CAACC,MAAb,GAAsBG,SAAtB;AACAJ,MAAAA,YAAY,CAACJ,KAAb,GAAqBQ,SAArB;AAEA,WAAKF,QAAL,CAAc;AACVL,QAAAA,cAAc,EAAE,IADN;AAEVD,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIH,KAlDsC;;AAAA,SAqDvCS,SArDuC,GAqD1BC,MAAD,IAAY;AACpB,UAAIlB,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAzB;AACAA,MAAAA,OAAO,CAACmB,OAAR,CAAgBD,MAAhB;AACA,WAAKJ,QAAL,CAAc;AAACd,QAAAA;AAAD,OAAd;AACH,KAzDsC;;AAAA,SA2DvCoB,YA3DuC,GA2DvBC,SAAD,IAAe;AACN,YAAMC,GAAG,GAAI,iCAAgCD,SAAU,EAAvD;AACAE,MAAAA,KAAK,CAACD,GAAD,EAAM;AAACE,QAAAA,MAAM,EAAE;AAAT,OAAN,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECC,KAFD,CAEOC,KAAK,IAAEC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAFd,EAGCJ,IAHD,CAGMM,OAAO,IAAE;AACX,YAAI/B,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,CAAmBgC,MAAnB,CAA0Bd,MAAM,IAAIA,MAAM,CAACd,EAAP,KAAciB,SAAlD,CAAd;AACA,aAAKP,QAAL,CAAc;AAACd,UAAAA,OAAO,EAACA;AAAT,SAAd;AACH,OAND;AAOH,KApEkB;;AAAA,SAuEvCiC,WAvEuC,GAuEzB,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC/BD,MAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACH,KAzEsC;;AAAA,SA4EvCC,WA5EuC,GA4EzB,MAAOC,QAAP,IAAoB;AAC9B,UAAIC,UAAU,GAAG,MAAMjB,KAAK,CAAC,kCAAD,CAA5B;AACA,UAAIkB,OAAO,GAAG,MAAMD,UAAU,CAACb,IAAX,EAApB;AACA,UAAIe,UAAU,GAAGD,OAAO,CAACT,MAAR,CAAeW,KAAK,IAAI;AACrC,eAAOC,UAAU,CAACD,KAAK,CAACrC,GAAP,CAAV,IAAyBiC,QAAQ,CAACjC,GAAT,GAAa,GAAtC,IACPsC,UAAU,CAACD,KAAK,CAACrC,GAAP,CAAV,IAAyBiC,QAAQ,CAACjC,GAAT,GAAa,GADtC;AAEH,OAHgB,CAAjB,CAH8B,CAO9B;;AACA,WAAKQ,QAAL,CAAc;AAACb,QAAAA,OAAO,EAACyC;AAAT,OAAd;AACH,KArFsC;;AAAA,SAwFvCG,SAxFuC,GAwF1BC,WAAD,IAAiB;AACzB,UAAIP,QAAQ,GAAG,EAAf;;AACA,UAAIO,WAAW,CAAC7C,OAAZ,CAAoB8C,MAApB,GAA4B,CAAhC,EAAkC;AAC9BR,QAAAA,QAAQ,CAACjC,GAAT,GAAewC,WAAW,CAAC7C,OAAZ,CAAoB,CAApB,EAAuB+C,QAAvB,CAAgCC,QAAhC,CAAyC3C,GAAxD;AACAiC,QAAAA,QAAQ,CAACW,GAAT,GAAgBJ,WAAW,CAAC7C,OAAZ,CAAoB,CAApB,EAAuB+C,QAAvB,CAAgCC,QAAhC,CAAyCC,GAAzD;AACH,OAHD,MAGK;AACDC,QAAAA,KAAK,CAAC,sCAAD,CAAL,CADC,CAED;AACH;;AACGrB,MAAAA,OAAO,CAACsB,GAAR,CAAY,SAAZ,EAAuBb,QAAvB;AACJ,WAAKD,WAAL,CAAiBC,QAAjB;AACH,KAnGsC;;AAAA,SAqGvCrC,YArGuC,GAqGxB,CAACmD,YAAD,EAAenB,KAAf,KAAyB;AACpC,WAAKpB,QAAL,CAAc;AAACZ,QAAAA,YAAY,EAACmD;AAAd,OAAd,EADoC,CAEpC;;AACAnB,MAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACAP,MAAAA,OAAO,CAACsB,GAAR,CAAY,cAAZ,EAA2BC,YAA3B;AACH,KA1GsC;;AAAA,SA4GvCC,WA5GuC,GA4GxBpB,KAAD,IAAU;AACpBA,MAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,cAAnB;AACH,KA9GsC;;AAAA,SAgHvCkB,UAhHuC,GAgHzBrB,KAAD,IAAU;AACnBA,MAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,KAlHsC;;AAAA,SAwHvCmB,YAxHuC,GAwHxB,CAACtC,MAAD,EAASuC,SAAT,KAAuB;AAClC3B,MAAAA,OAAO,CAACsB,GAAR,CAAYlC,MAAZ,EAAoBuC,SAApB;AACA,UAAIpC,SAAS,GAAGH,MAAM,CAACd,EAAvB;AACA,UAAIsD,WAAW,GAAG;AAAC/C,QAAAA,OAAO,EAAC,CAAT;AAAYgD,QAAAA,WAAW,EAACzC,MAAM,CAACyC,WAA/B;AAA4CzC,QAAAA,MAAM,EAACuC;AAAnD,OAAlB;AACA,YAAMnC,GAAG,GAAI,iCAAgCD,SAAU,EAAvD;AACAE,MAAAA,KAAK,CAACD,GAAD,EAAM;AAACE,QAAAA,MAAM,EAAC,OAAR;AACPoC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CADE;AAEPK,QAAAA,OAAO,EAAE;AAAC,0BAAe;AAAhB;AAFF,OAAN,CAAL,CAICtC,IAJD,CAIMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAJX,EAKCC,KALD,CAKOC,KAAK,IAAEC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CALd,EAMCJ,IAND,CAMMM,OAAO,IAAE;AACZ,eAAOD,OAAO,CAACsB,GAAR,CAAYrB,OAAZ,CAAP;AACF,OARD;AASH,KAtIsC;;AAAA,SAwIvCiC,aAxIuC,GAwItB9B,KAAD,IAAW;AACvB,YAAMyB,WAAW,GAAGzB,KAAK,CAACS,KAAN,CAAYvC,EAAhC;AACA,YAAMO,OAAO,GAAG,CAAhB;AACA,YAAMsD,IAAI,GAAG/B,KAAK,CAACS,KAAN,CAAYsB,IAAzB;AACA,YAAMC,SAAS,GAAG;AAACP,QAAAA,WAAW,EAACA,WAAb;AAA0BhD,QAAAA,OAAO,EAACA,OAAlC;AAA2CsD,QAAAA,IAAI,EAACA;AAAhD,OAAlB;AACA,YAAM3C,GAAG,GAAG,mCAAZ;AACAC,MAAAA,KAAK,CAACD,GAAD,EAAM;AAACE,QAAAA,MAAM,EAAE,MAAT;AACXoC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeI,SAAf,CADM;AAEXH,QAAAA,OAAO,EAAE;AAAC,0BAAe;AAAhB;AAFE,OAAN,CAAL,CAGGtC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAICC,KAJD,CAIOC,KAAK,IAAEC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAJd,EAKCJ,IALD,CAKMC,GAAG,IAAI;AACTI,QAAAA,OAAO,CAACsB,GAAR,CAAY,UAAZ,EAAuB1B,GAAvB;AACA,YAAI3B,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA7B;AACAA,QAAAA,WAAW,CAACsC,IAAZ,CAAiB6B,SAAjB;AACD,aAAKpD,QAAL,CAAc;AAACf,UAAAA,WAAW,EAACA;AAAb,SAAd;AACAmC,QAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,cAAnB;AACF,OAXD;AAYH,KA1JsC;;AAAA,SA4JvC8B,aA5JuC,GA4JtBxB,KAAD,IAAW;AACvB,YAAMrB,GAAG,GAAI,qCAAoCqB,KAAK,CAACvC,EAAG,EAA1D;AACAmB,MAAAA,KAAK,CAACD,GAAD,EAAM;AAACE,QAAAA,MAAM,EAAE;AAAT,OAAN,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECC,KAFD,CAEOC,KAAK,IAAEC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAFd,EAGCJ,IAHD,CAGMM,OAAO,IAAE;AACX,YAAIhC,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAAX,CAAuBiC,MAAvB,CAA8BkC,SAAS,IAAIA,SAAS,CAAC9D,EAAV,KAAiBuC,KAAK,CAACvC,EAAlE,CAAlB;AACA,aAAKU,QAAL,CAAc;AAACf,UAAAA,WAAW,EAACA;AAAb,SAAd;AACH,OAND;AAOH,KArKsC;AAAA;;AAgBvCqE,EAAAA,iBAAiB,GAAE;AACf7C,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADZ,EAECF,IAFD,CAEM4C,MAAM,IAAE;AACVvC,MAAAA,OAAO,CAACsB,GAAR,CAAYiB,MAAZ;AACA,WAAKvD,QAAL,CAAc;AAACd,QAAAA,OAAO,EAACqE;AAAT,OAAd;AACH,KALD;AAOA9C,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADZ,EAECF,IAFD,CAEM4C,MAAM,IAAE;AACVvC,MAAAA,OAAO,CAACsB,GAAR,CAAYiB,MAAZ;AACA,WAAKvD,QAAL,CAAc;AAACf,QAAAA,WAAW,EAACsE;AAAb,OAAd;AACH,KALD;AAMH;;AA0IDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADR,EAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,0CACC,CAAC,CAAC,KAAKxE,KAAL,CAAWU,KAAb,GACK;AAAQ,MAAA,OAAO,EAAE,KAAKO,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADL,GAEI,EAHL,CAFA,EAQC,CAAC,CAAC,KAAKjB,KAAL,CAAWU,KAAb,GACK,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWU,KAAzB;AACU,MAAA,cAAc,EAAE,KAAKV,KAAL,CAAWW,cADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,GAGiB,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXlB,CAJR,EAkBQ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,GAAnB;AAAwB,MAAA,MAAM,EAAIwB,KAAD,IACjC;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACY,oBAAC,UAAD,oBAAgBA,KAAhB;AACA,QAAA,WAAW,EAAE,KAAKI,WADlB;AAEA,QAAA,SAAS,EAAE,KAAKO,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADZ,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBR,EA2BQ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,GAAnB;AAAwB,MAAA,MAAM,EAAIX,KAAD,IACjC;AAAK,QAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD,oBAAkBA,KAAlB;AACA,QAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWG,OADpB;AAEA,QAAA,YAAY,EAAE,KAAKC,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BR,EAoCQ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,WAAnB;AAAgC,MAAA,MAAM,EAAIgC,KAAD,IAC1C;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb,SAA4BA,KAA5B;AACI,QAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWI,YADtB;AAEI,QAAA,cAAc,EAAE,KAAKqE,cAFzB;AAGI,QAAA,aAAa,EAAE,KAAKP,aAHxB;AAII,QAAA,WAAW,EAAE,KAAKV,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD,CADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCR,EAgDQ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,cAAnB;AAAmC,MAAA,MAAM,EAAIpB,KAAD,IAC5C;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,WAAD,oBAAiBA,KAAjB;AACA,QAAA,WAAW,EAAE,KAAKpC,KAAL,CAAWC,WADxB;AAEA,QAAA,aAAa,EAAE,KAAKoE,aAFpB;AAGA,QAAA,UAAU,EAAE,KAAKZ,UAHjB;AAIA,QAAA,WAAW,EAAE,KAAKtB,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhDR,EA2DQ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,UAAnB;AAA+B,MAAA,MAAM,EAAIC,KAAD,IACxC;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD,oBAAgBA,KAAhB;AACY,QAAA,YAAY,EAAE,KAAKpC,KAAL,CAAWI,YADrC;AAEY,QAAA,SAAS,EAAE,KAAKe,SAF5B;AAGY,QAAA,UAAU,EAAE,KAAKsC,UAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DR,EAqEQ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,UAAnB;AAA+B,MAAA,MAAM,EAAGrB,KAAD,IACvC;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD,oBAAaA,KAAb;AACQ,QAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWE,OAD5B;AAEQ,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAF5B;AAGQ,QAAA,YAAY,EAAE,KAAKmB,YAH3B;AAIQ,QAAA,YAAY,EAAE,KAAKoC,YAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArER,CADJ;AAkFH;;AA3PsC","sourcesContent":["import React, { Component } from 'react'\nimport MapContainer from '../src/containers/mapcontainer'\nimport './index.css';\nimport SearchForm from '../src/components/searchform'\nimport Favbeach from '../src/components/favbeach'\nimport ReviewForm from '../src/components/reviewform'\nimport Reviews from '../src/components/reviews'\nimport Userbeaches from '../src/components/userbeaches'\nimport Login from './components/Login'\nimport {Route, Switch} from 'react-router-dom'\n\n\nexport default class App extends Component {\n    state = {\n        userbeaches:[],\n        reviews:[],\n        results:[],\n        displayBeach:[],\n        user: {\n            id: 1\n            },\n        geocode:{lat:\"\",\n                long:\"\"\n            },\n        token:null,\n        loggedInUserId: null\n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:3000/reviews\")\n        .then(res=> res.json())\n        .then(resObj=>{\n            console.log(resObj)\n            this.setState({reviews:resObj})\n        })\n\n        fetch(\"http://localhost:3000/userbeaches\")\n        .then(res=> res.json())\n        .then(resObj=>{\n            console.log(resObj)\n            this.setState({userbeaches:resObj})\n        })\n    }\n    \n    setToken = ({token, user_id}) => {\n        localStorage.token = token\n        localStorage.userId = user_id\n        \n        this.setState({\n            token:token,\n            loggedInUserId:user_id\n        })\n    }\n    \n    logOutClick = () => {\n        localStorage.userId = undefined\n        localStorage.token = undefined\n\n        this.setState({\n            loggedInUserId: null,\n            token: null\n        })\n    }\n    \n\n    addReview = (review) => {\n        let reviews = this.state.reviews\n        reviews.unshift(review)\n        this.setState({reviews})\n    }\n   \n    deleteReview = (review_id) => {\n                            const url = `http://localhost:3000/reviews/${review_id}`\n                            fetch(url, {method: 'DELETE'})\n                            .then(res=>res.json())\n                            .catch(error=>console.error(\"Error:\", error))\n                            .then(respObj=>{\n                                let reviews = this.state.reviews.filter(review => review.id !== review_id)\n                                this.setState({reviews:reviews})\n                            })  \n                        }\n\n                       \n    reviewBeach = (props, beach_id) => {\n        props.history.push('/reviews')\n    }\n                        \n    \n    grabBeaches = async (QlatLong) => {\n        let rawBeaches = await fetch('http://localhost:3000/favbeaches')\n        let beaches = await rawBeaches.json()\n        let newBeaches = beaches.filter(beach => {\n            return parseFloat(beach.lat) <= QlatLong.lat+.05 && \n            parseFloat(beach.lat) >= QlatLong.lat-.05\n        })\n        // console.log(newBeaches)\n        this.setState({results:newBeaches})\n    }\n    \n\n    queryCode = (responseObj) => {\n        let QlatLong = {}\n        if (responseObj.results.length >0){\n            QlatLong.lat = responseObj.results[0].geometry.location.lat\n            QlatLong.lng =  responseObj.results[0].geometry.location.lng\n        }else{\n            alert(\"Your Please Resubmit your user Query\")\n            // QlatLong = {lat:37.8591,lng:122.4853}\n        }\n            console.log(\"default\", QlatLong)\n        this.grabBeaches(QlatLong)\n    }\n\n    displayBeach = (clickedBeach, props) => {\n        this.setState({displayBeach:clickedBeach})\n        // console.log(\"favbeach props\", props)\n        props.history.push('/favbeach')\n        console.log(\"clickedBeach\",clickedBeach)\n    }\n\n    userBeaches = (props) =>{\n        props.history.push('/userbeaches')\n    }\n\n    returnHome = (props) =>{\n        props.history.push('/')\n    }\n    \n    // refreshBeaches = (event) => {\n    //     this.setState({displayBeach:[]})\n    // }\n    \n    updateReview = (review, newReview) => {\n        console.log(review, newReview)\n        let review_id = review.id\n        let reviewPatch = {user_id:1, favbeach_id:review.favbeach_id, review:newReview}\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method:'PATCH',\n            body:JSON.stringify(reviewPatch),\n            headers: {'content-type':'application/json'}\n            })\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n           return console.log(respObj)\n        })\n    }\n\n    addBeachtoUBs = (props) => {\n        const favbeach_id = props.beach.id\n        const user_id = 1\n        const name = props.beach.name\n        const userbeach = {favbeach_id:favbeach_id, user_id:user_id, name:name}\n        const url = \"http://localhost:3000/userbeaches\"\n        fetch(url, {method: 'POST',\n        body:JSON.stringify(userbeach),\n        headers: {'content-type':'application/json'}\n        }).then(res => res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(res => {\n            console.log('Success:',res)\n            let userbeaches = this.state.userbeaches\n            userbeaches.push(userbeach)\n           this.setState({userbeaches:userbeaches})\n           props.history.push('/userbeaches')\n        })\n    }\n\n    deleteFromUBs = (beach) => {\n        const url = `http://localhost:3000/userbeaches/${beach.id}`\n        fetch(url, {method: 'DELETE'})\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n            let userbeaches = this.state.userbeaches.filter(userbeach => userbeach.id !== beach.id)\n            this.setState({userbeaches:userbeaches})\n        })  \n    }\n    \n    \n    render() {  \n        return (\n            <div id=\"app\">\n                    <div id=\"title\">\n                    CALIFORNIA BEACH FINDER\n                    </div>\n                    <div>\n                    \n                    <>\n                    {!!this.state.token\n                        ? <button onClick={this.logOutClick}>Log Out</button>\n                        :\"\"\n                    }\n                    </>\n                    {!!this.state.token\n                        ? <Login token={this.state.token}\n                                    loggedInUserId={this.state.loggedInUserId}/>\n                                    : <Login setToken={this.setToken}/>\n                    }\n                    </div>\n                    <Route exact path={'/'} render= {(props) => \n                    <div id=\"search-bar\">\n                                <SearchForm {...props} \n                                grabBeaches={this.grabBeaches}\n                                queryCode={this.queryCode}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/'} render= {(props) => \n                    <div id=\"map-showcase app\"> \n                        <MapContainer {...props}\n                        beaches={this.state.results} \n                        displayBeach={this.displayBeach}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/favbeach'} render= {(props) =>\n                   <div id=\"fav-beach\">\n                    <Favbeach id=\"favbeach\" {...props} \n                        beach={this.state.displayBeach}\n                        refreshBeaches={this.refreshBeaches}\n                        addBeachtoUBs={this.addBeachtoUBs}\n                        userBeaches={this.userBeaches}\n                    />\n                    </div>           \n                    }    \n                    /> \n\n                    <Route exact path={'/userbeaches'} render= {(props) => \n                    <div id=\"userbeaches\">\n                    <Userbeaches {...props}\n                    userbeaches={this.state.userbeaches}\n                    deleteFromUBs={this.deleteFromUBs}\n                    returnHome={this.returnHome}\n                    reviewBeach={this.reviewBeach}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render= {(props) =>\n                    <div id=\"reviewform\">\n                    <ReviewForm {...props}\n                                displayBeach={this.state.displayBeach}\n                                addReview={this.addReview}\n                                returnHome={this.returnHome}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render={(props) =>\n                    <div id=\"reviews\">\n                    <Reviews {...props}\n                            reviews={this.state.reviews}\n                            beaches={this.state.results}\n                            deleteReview={this.deleteReview}\n                            updateReview={this.updateReview}\n                    />\n                    </div>}\n                    />\n            </div>    \n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}