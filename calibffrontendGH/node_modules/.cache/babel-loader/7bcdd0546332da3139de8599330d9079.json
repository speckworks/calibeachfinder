{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js\";\nimport React, { Component } from 'react';\nexport default class Reviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: [],\n      loaded: false\n    };\n  }\n\n  com() {\n    if (this.props.reviews) {\n      this.setState({\n        loaded: true\n      });\n    }\n\n    handleChange = event => {\n      this.setState({\n        reviews: event.target.value\n      });\n    };\n\n    reviewsLoaded = () => {\n      let reviewsArr = this.props.reviews.sort((a, b) => b.id - a.id); // const myReviews = reviewsArr.filter(review=> review.user_id === this.props.user_id)\n      // console.log(\"myreviews\", myReviews)\n\n      return reviewsArr.map(review => {\n        if (review.user_id === this.props.user_id) {\n          console.log(\"review.beach\", review.beach);\n          return React.createElement(\"span\", {\n            key: review.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \"Beach Name:\", review.beach.name), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"Beach Id:\", review.beach_id), React.createElement(\"textarea\", {\n            defaultValue: review.review,\n            onChange: this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            onClick: () => this.props.deleteReview(review.id),\n            className: \"btn btn-info btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \"Delete\"), React.createElement(\"button\", {\n            onClick: () => this.props.updateReview(review, this.state.reviews),\n            className: \"btn btn-warning btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, \"Update\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }));\n        }\n      });\n    };\n  }\n\n  render() {\n    //     let reviews;\n    //     if (myReviews.length > 0){\n    //     reviews = myReviews.map((review)=>{\n    //    return <span key={review.id}>\n    //   <div>Beach Name:\n    //         {beach.name}\n    //      </div>\n    //   <textarea defaultValue={review.review} onChange={this.handleChange}>\n    //   </textarea>\n    //   <button onClick={()=>this.props.deleteReview(review.id)}\n    //   className=\"btn btn-info btn-sm\">Delete</button>\n    //   <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n    //   className=\"btn btn-warning btn-sm\">Update</button>\n    //   <br></br></span>\n    //   })\n    //   }else{\n    //       return <h2>Loading...</h2>\n    //   }\n    return React.createElement(\"div\", {\n      className: \"container reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Reviews of Beaches\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, !this.state.loaded ? console.log('se') : console.log(\"reveeeeeews\", this.reviewsLoaded())));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js"],"names":["React","Component","Reviews","state","reviews","loaded","com","props","setState","handleChange","event","target","value","reviewsLoaded","reviewsArr","sort","a","b","id","map","review","user_id","console","log","beach","name","beach_id","deleteReview","updateReview","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAK3CE,KAL2C,GAKnC;AACJC,MAAAA,OAAO,EAAC,EADJ;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KALmC;AAAA;;AAU3CC,EAAAA,GAAG,GAAE;AACD,QAAI,KAAKC,KAAL,CAAWH,OAAf,EAAwB;AACpB,WAAKI,QAAL,CAAc;AACVH,QAAAA,MAAM,EAAE;AADE,OAAd;AAGP;;AAEDI,IAAAA,YAAY,GAAIC,KAAD,IAAW;AACtB,WAAKF,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAACM,KAAK,CAACC,MAAN,CAAaC;AAAtB,OAAd;AACH,KAFD;;AAIAC,IAAAA,aAAa,GAAG,MAAK;AACb,UAAIC,UAAU,GAAG,KAAKP,KAAL,CAAWH,OAAX,CAAmBW,IAAnB,CAAwB,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAA1C,CAAjB,CADa,CAEb;AACA;;AACA,aAAOJ,UAAU,CAACK,GAAX,CAAgBC,MAAD,IAAU;AAC5B,YAAIA,MAAM,CAACC,OAAP,KAAmB,KAAKd,KAAL,CAAWc,OAAlC,EAA0C;AACtCC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,MAAM,CAACI,KAAnC;AACA,iBAAO;AAAM,YAAA,GAAG,EAAEJ,MAAM,CAACF,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACoBE,MAAM,CAACI,KAAP,CAAaC,IADjC,CADO,EAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACGL,MAAM,CAACM,QADV,CAHS,EAMT;AAAU,YAAA,YAAY,EAAEN,MAAM,CAACA,MAA/B;AAAuC,YAAA,QAAQ,EAAE,KAAKX,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANS,EAQT;AAAQ,YAAA,OAAO,EAAE,MAAI,KAAKF,KAAL,CAAWoB,YAAX,CAAwBP,MAAM,CAACF,EAA/B,CAArB;AACA,YAAA,SAAS,EAAC,qBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARS,EAUT;AAAQ,YAAA,OAAO,EAAE,MAAI,KAAKX,KAAL,CAAWqB,YAAX,CAAwBR,MAAxB,EAAgC,KAAKjB,KAAL,CAAWC,OAA3C,CAArB;AACA,YAAA,SAAS,EAAC,wBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVS,EAYT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZS,CAAP;AAaC;AACJ,OAjBE,CAAP;AAkBH,KAtBL;AAwBC;;AAEDyB,EAAAA,MAAM,GAAG;AAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC,KAAK1B,KAAL,CAAWE,MAAZ,GAAsBiB,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAtB,GAA0CD,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKV,aAAL,EAA3B,CAD3C,CAHJ,CADJ;AAWH;;AAnF0C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Reviews extends Component {\n    \n  \n   \n\n    state = {\n        reviews:[],\n        loaded: false\n    };  \n\n    com(){\n        if (this.props.reviews) {\n            this.setState({\n                loaded: true\n            })\n    }\n    \n    handleChange = (event) => {\n        this.setState({reviews:event.target.value})\n    }\n\n    reviewsLoaded = () =>{\n            let reviewsArr = this.props.reviews.sort((a,b) => b.id - a.id)\n            // const myReviews = reviewsArr.filter(review=> review.user_id === this.props.user_id)\n            // console.log(\"myreviews\", myReviews)\n            return reviewsArr.map((review)=>{\n                if (review.user_id === this.props.user_id){\n                    console.log(\"review.beach\", review.beach)\n                    return <span key={review.id}>\n                    <div>Beach Name:    \n                                       {review.beach.name}</div>\n                  <div>Beach Id:\n                    {review.beach_id}\n                     </div>\n                  <textarea defaultValue={review.review} onChange={this.handleChange}>\n                  </textarea>\n                  <button onClick={()=>this.props.deleteReview(review.id)}\n                  className=\"btn btn-info btn-sm\">Delete</button>\n                  <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n                  className=\"btn btn-warning btn-sm\">Update</button>\n                  <br></br></span>\n                    }\n                })\n        }\n        \n    }\n\n    render() {\n\n\n            \n        //     let reviews;\n        //     if (myReviews.length > 0){\n        //     reviews = myReviews.map((review)=>{\n        //    return <span key={review.id}>\n        //   <div>Beach Name:\n        //         {beach.name}\n        //      </div>\n        //   <textarea defaultValue={review.review} onChange={this.handleChange}>\n        //   </textarea>\n        //   <button onClick={()=>this.props.deleteReview(review.id)}\n        //   className=\"btn btn-info btn-sm\">Delete</button>\n        //   <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n        //   className=\"btn btn-warning btn-sm\">Update</button>\n        //   <br></br></span>\n        //   })\n        //   }else{\n        //       return <h2>Loading...</h2>\n        //   }\n            \n\n        \n        return (\n            <div className=\"container reviews\" >\n            <div>Reviews of Beaches</div>\n                {/* <button>All Beach Reviews</button> */}\n                <div>\n                {!this.state.loaded ?  console.log('se') : console.log(\"reveeeeeews\", this.reviewsLoaded()) }\n\n            {/* {allReviews} */}\n                </div>\n            </div>\n            )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}