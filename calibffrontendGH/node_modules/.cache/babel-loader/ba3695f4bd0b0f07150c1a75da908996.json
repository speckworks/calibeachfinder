{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport MapContainer from '../src/containers/mapcontainer';\nimport './index.css';\nimport SearchForm from '../src/components/searchform.js';\nimport Favbeach from '../src/components/favbeach';\nimport ReviewForm from '../src/components/reviewform';\nimport Reviews from '../src/components/reviews';\nimport Userbeaches from '../src/components/userbeaches';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userbeaches: [],\n      reviews: [],\n      displayBeach: [],\n      user: {\n        id: 1\n      },\n      geocode: {\n        lat: \"\",\n        long: \"\"\n      }\n    };\n\n    this.addReview = review => {\n      let reviews = this.state.reviews;\n      reviews.push(review);\n      this.setState({\n        reviews,\n        review\n      });\n    };\n\n    this.deleteReview = review_id => {\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let reviews = this.state.reviews.filter(review => review.id !== review_id);\n        this.setState({\n          reviews: reviews\n        });\n      });\n    };\n\n    this.grabBeaches = async QlatLong => {\n      let rawBeaches = await fetch('http://localhost:3000/favbeaches');\n      let beaches = await rawBeaches.json();\n      let newBeaches = beaches.filter(beach => {\n        return parseFloat(beach.lat) <= QlatLong.lat + .05 && parseFloat(beach.lat) >= QlatLong.lat - .05;\n      });\n      console.log(newBeaches);\n      this.setState({\n        results: newBeaches\n      });\n    };\n\n    this.queryCode = responseObj => {\n      let QlatLong = {};\n\n      if (responseObj.results.length > 0) {\n        QlatLong.lat = responseObj.results[0].geometry.location.lat;\n        QlatLong.lng = responseObj.results[0].geometry.location.lng;\n      } else {\n        QlatLong = {\n          lat: 37.8591,\n          lng: 122.4853\n        };\n      } // console.log(\"default\", QlatLong)\n\n\n      this.grabBeaches(QlatLong);\n    };\n\n    this.displayBeach = clickedBeach => {\n      if (this.displayBeach.length > 0) {\n        console.log(\"clickedBeach\", clickedBeach);\n        this.setState({\n          displayBeach: clickedBeach\n        });\n      }\n    };\n\n    this.refreshBeaches = event => {\n      this.setState({\n        displayBeach: []\n      });\n    };\n\n    this.updateReview = (review, newReview) => {\n      console.log(review, newReview);\n      let review_id = review.id;\n      let reviewPatch = {\n        user_id: 1,\n        favbeach_id: review.favbeach_id,\n        review: newReview\n      };\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'PATCH',\n        body: JSON.stringify(reviewPatch),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        return console.log(respObj);\n      });\n    };\n\n    this.addBeachtoUBs = beach => {\n      const favbeach_id = beach.id;\n      const user_id = 1;\n      const name = beach.name;\n      const userbeach = {\n        favbeach_id: favbeach_id,\n        user_id: user_id,\n        name: name\n      };\n      const url = \"http://localhost:3000/userbeaches\";\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(userbeach),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(res => {\n        console.log('Success:', res);\n        console.log(\"Adding Beach to User Beaches\", beach);\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/reviews\").then(res => res.json()).then(resObj => {\n      console.log(resObj);\n      this.setState({\n        reviews: resObj\n      });\n    });\n    fetch(\"http://localhost:3000/userbeaches\").then(res => res.json()).then(resObj => {\n      console.log(resObj);\n      this.setState({\n        userbeaches: resObj\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"CALIFORNIA BEACH FINDER\", React.createElement(\"div\", {\n      id: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      grabBeaches: this.grabBeaches,\n      queryCode: this.queryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"userbeaches\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Userbeaches, {\n      userbeaches: this.state.userbeaches,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"fav-beach\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Favbeach, {\n      beach: this.state.displayBeach,\n      refreshBeaches: this.refreshBeaches,\n      addBeachtoUBs: this.addBeachtoUBs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"map-showcase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      beaches: this.state.results,\n      displayBeach: this.displayBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"reviewform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(ReviewForm, {\n      displayBeach: this.state.displayBeach,\n      addReview: this.addReview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Reviews, {\n      reviews: this.state.reviews,\n      beaches: this.state.results,\n      deleteReview: this.deleteReview,\n      updateReview: this.updateReview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js"],"names":["React","Component","MapContainer","SearchForm","Favbeach","ReviewForm","Reviews","Userbeaches","App","state","userbeaches","reviews","displayBeach","user","id","geocode","lat","long","addReview","review","push","setState","deleteReview","review_id","url","fetch","method","then","res","json","catch","error","console","respObj","filter","grabBeaches","QlatLong","rawBeaches","beaches","newBeaches","beach","parseFloat","log","results","queryCode","responseObj","length","geometry","location","lng","clickedBeach","refreshBeaches","event","updateReview","newReview","reviewPatch","user_id","favbeach_id","body","JSON","stringify","headers","addBeachtoUBs","name","userbeach","componentDidMount","resObj","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MapContainer from '../src/containers/mapcontainer'\nimport './index.css';\nimport SearchForm from '../src/components/searchform.js'\nimport Favbeach from '../src/components/favbeach'\nimport ReviewForm from '../src/components/reviewform'\nimport Reviews from '../src/components/reviews'\nimport Userbeaches from '../src/components/userbeaches'\n\nexport default class App extends Component {\n    state = {\n        userbeaches:[],\n        reviews:[],\n        displayBeach:[],\n        user: {\n            id: 1\n        },\n        geocode:{lat:\"\",\n                long:\"\"}\n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:3000/reviews\")\n        .then(res=> res.json())\n        .then(resObj=>{\n            console.log(resObj)\n            this.setState({reviews:resObj})\n        })\n\n        fetch(\"http://localhost:3000/userbeaches\")\n        .then(res=> res.json())\n        .then(resObj=>{\n            console.log(resObj)\n            this.setState({userbeaches:resObj})\n        })\n    }\n    \n    addReview = (review) => {\n        let reviews = this.state.reviews\n        reviews.push(review)\n        this.setState({reviews, review})\n    }\n   \n    deleteReview = (review_id) => {\n                            const url = `http://localhost:3000/reviews/${review_id}`\n                            fetch(url, {method: 'DELETE'})\n                            .then(res=>res.json())\n                            .catch(error=>console.error(\"Error:\", error))\n                            .then(respObj=>{\n                                let reviews = this.state.reviews.filter(review => review.id !== review_id)\n                                this.setState({reviews:reviews})\n                            })  \n                        }\n    \n    grabBeaches = async (QlatLong) => {\n        let rawBeaches = await fetch('http://localhost:3000/favbeaches')\n        let beaches = await rawBeaches.json()\n        let newBeaches = beaches.filter(beach => {\n            return parseFloat(beach.lat) <= QlatLong.lat+.05 && \n            parseFloat(beach.lat) >= QlatLong.lat-.05\n        })\n        console.log(newBeaches)\n        this.setState({results:newBeaches})\n    }\n    \n\n    queryCode = (responseObj) => {\n        let QlatLong = {}\n        if (responseObj.results.length >0){\n            QlatLong.lat = responseObj.results[0].geometry.location.lat\n            QlatLong.lng =  responseObj.results[0].geometry.location.lng\n        }else{\n            QlatLong = {lat:37.8591,lng:122.4853}\n        }\n            // console.log(\"default\", QlatLong)\n        this.grabBeaches(QlatLong)\n    }\n\n    displayBeach = (clickedBeach) => {\n        if(this.displayBeach.length > 0){\n        console.log(\"clickedBeach\",clickedBeach)\n        this.setState({displayBeach:clickedBeach})}\n    }\n    \n    refreshBeaches = (event) => {\n        this.setState({displayBeach:[]})\n    }\n    \n    \n    updateReview = (review, newReview) => {\n        console.log(review, newReview)\n        let review_id = review.id\n        let reviewPatch = {user_id:1, favbeach_id:review.favbeach_id, review:newReview}\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method:'PATCH',\n            body:JSON.stringify(reviewPatch),\n            headers: {'content-type':'application/json'}\n            })\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n           return console.log(respObj)\n        })\n    }\n\n    addBeachtoUBs = (beach) => {\n        const favbeach_id = beach.id\n        const user_id = 1\n        const name = beach.name\n        const userbeach = {favbeach_id:favbeach_id, user_id:user_id, name:name}\n        const url = \"http://localhost:3000/userbeaches\"\n        fetch(url, {method: 'POST',\n        body:JSON.stringify(userbeach),\n        headers: {'content-type':'application/json'}\n        }).then(res => res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(res => {\n            console.log('Success:',res)\n            console.log(\"Adding Beach to User Beaches\", beach)\n        })\n    }\n    \n    render() {  \n        return (\n            <div id=\"root\">\n                    CALIFORNIA BEACH FINDER\n                    <div id=\"search-bar\">\n                    <SearchForm grabBeaches={this.grabBeaches}\n                                queryCode={this.queryCode}\n                    />\n                    </div>\n                    <div id=\"userbeaches\">\n                    <Userbeaches\n                        userbeaches={this.state.userbeaches}\n                    />\n                    </div>\n                    <div id=\"fav-beach\">\n                    <Favbeach beach={this.state.displayBeach}\n                        refreshBeaches={this.refreshBeaches}\n                        addBeachtoUBs={this.addBeachtoUBs}\n                    />                \n                    </div>\n                    <div id=\"map-showcase\"> \n                    <MapContainer beaches={this.state.results} \n                    displayBeach={this.displayBeach}/>\n                    </div>\n                    <div id=\"reviewform\">\n                    <ReviewForm displayBeach={this.state.displayBeach}\n                                addReview={this.addReview}\n                    />\n                    </div>\n                    <div id=\"reviews\">\n                    <Reviews reviews={this.state.reviews}\n                            beaches={this.state.results}\n                            deleteReview={this.deleteReview}\n                            updateReview={this.updateReview}\n                    />\n                    </div>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}