{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js\";\nimport React, { Component } from 'react';\nexport default class Reviews extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: [],\n      loaded: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        reviews: event.target.value\n      });\n    };\n\n    this.setsometnig = () => {\n      if (this.props.reviews) {\n        this.setState({\n          loaded: true\n        });\n      }\n\n      reviewsLoaded = () => {\n        let reviewsArr = this.props.reviews.sort((a, b) => b.id - a.id); // const myReviews = reviewsArr.filter(review=> review.user_id === this.props.user_id)\n        // console.log(\"myreviews\", myReviews)\n\n        return reviewsArr.map(review => {\n          if (review.user_id === this.props.user_id) {\n            console.log(\"review.beach\", review.beach);\n            return React.createElement(\"span\", {\n              key: review.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }, \"Beach Name:\", review.beach.name), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }, \"Beach Id:\", review.beach_id), React.createElement(\"textarea\", {\n              defaultValue: review.review,\n              onChange: this.handleChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }), React.createElement(\"button\", {\n              onClick: () => this.props.deleteReview(review.id),\n              className: \"btn btn-info btn-sm\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            }, \"Delete\"), React.createElement(\"button\", {\n              onClick: () => this.props.updateReview(review, this.state.reviews),\n              className: \"btn btn-warning btn-sm\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }, \"Update\"), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }));\n          }\n        });\n      };\n    };\n  }\n\n  render() {\n    //     let reviews;\n    //     if (myReviews.length > 0){\n    //     reviews = myReviews.map((review)=>{\n    //    return <span key={review.id}>\n    //   <div>Beach Name:\n    //         {beach.name}\n    //      </div>\n    //   <textarea defaultValue={review.review} onChange={this.handleChange}>\n    //   </textarea>\n    //   <button onClick={()=>this.props.deleteReview(review.id)}\n    //   className=\"btn btn-info btn-sm\">Delete</button>\n    //   <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n    //   className=\"btn btn-warning btn-sm\">Update</button>\n    //   <br></br></span>\n    //   })\n    //   }else{\n    //       return <h2>Loading...</h2>\n    //   }\n    return React.createElement(\"div\", {\n      className: \"container reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Reviews of Beaches\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, setsometnig, !this.props.reviews ? null : this.setsometnig(), !this.props.reviews ? null : console.log(\"reveeeeeews\", this.reviewsLoaded())));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/components/reviews.js"],"names":["React","Component","Reviews","state","reviews","loaded","handleChange","event","setState","target","value","setsometnig","props","reviewsLoaded","reviewsArr","sort","a","b","id","map","review","user_id","console","log","beach","name","beach_id","deleteReview","updateReview","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE3CE,KAF2C,GAEnC;AACJC,MAAAA,OAAO,EAAC,EADJ;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAFmC;;AAAA,SAO3CC,YAP2C,GAO3BC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAACG,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACH,KAT0C;;AAAA,SAW3CC,WAX2C,GAW7B,MAAM;AACnB,UAAI,KAAKC,KAAL,CAAWR,OAAf,EAAwB;AAClB,aAAKI,QAAL,CAAc;AACXH,UAAAA,MAAM,EAAE;AADG,SAAd;AAGN;;AAEDQ,MAAAA,aAAa,GAAG,MAAK;AACb,YAAIC,UAAU,GAAG,KAAKF,KAAL,CAAWR,OAAX,CAAmBW,IAAnB,CAAwB,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAA1C,CAAjB,CADa,CAEb;AACA;;AACA,eAAOJ,UAAU,CAACK,GAAX,CAAgBC,MAAD,IAAU;AAC5B,cAAIA,MAAM,CAACC,OAAP,KAAmB,KAAKT,KAAL,CAAWS,OAAlC,EAA0C;AACtCC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,MAAM,CAACI,KAAnC;AACA,mBAAO;AAAM,cAAA,GAAG,EAAEJ,MAAM,CAACF,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACoBE,MAAM,CAACI,KAAP,CAAaC,IADjC,CADO,EAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACGL,MAAM,CAACM,QADV,CAHS,EAMT;AAAU,cAAA,YAAY,EAAEN,MAAM,CAACA,MAA/B;AAAuC,cAAA,QAAQ,EAAE,KAAKd,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANS,EAQT;AAAQ,cAAA,OAAO,EAAE,MAAI,KAAKM,KAAL,CAAWe,YAAX,CAAwBP,MAAM,CAACF,EAA/B,CAArB;AACA,cAAA,SAAS,EAAC,qBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARS,EAUT;AAAQ,cAAA,OAAO,EAAE,MAAI,KAAKN,KAAL,CAAWgB,YAAX,CAAwBR,MAAxB,EAAgC,KAAKjB,KAAL,CAAWC,OAA3C,CAArB;AACA,cAAA,SAAS,EAAC,wBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVS,EAYT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZS,CAAP;AAaC;AACJ,SAjBE,CAAP;AAkBH,OAtBL;AAwBC,KA1C0C;AAAA;;AA4C3CyB,EAAAA,MAAM,GAAG;AAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACClB,WADD,EAEC,CAAC,KAAKC,KAAL,CAAWR,OAAZ,GAAuB,IAAvB,GAA8B,KAAKO,WAAL,EAF/B,EAGC,CAAC,KAAKC,KAAL,CAAWR,OAAZ,GAAuB,IAAvB,GAA8BkB,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKV,aAAL,EAA3B,CAH/B,CAHJ,CADJ;AAaH;;AAlF0C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Reviews extends Component {\n    \n    state = {\n        reviews:[],\n        loaded: false\n    };  \n    \n    handleChange = (event) => {\n        this.setState({reviews:event.target.value})\n    }\n\n    setsometnig = () => {\n     if (this.props.reviews) {\n           this.setState({\n              loaded: true\n          })\n    }\n\n    reviewsLoaded = () =>{\n            let reviewsArr = this.props.reviews.sort((a,b) => b.id - a.id)\n            // const myReviews = reviewsArr.filter(review=> review.user_id === this.props.user_id)\n            // console.log(\"myreviews\", myReviews)\n            return reviewsArr.map((review)=>{\n                if (review.user_id === this.props.user_id){\n                    console.log(\"review.beach\", review.beach)\n                    return <span key={review.id}>\n                    <div>Beach Name:    \n                                       {review.beach.name}</div>\n                  <div>Beach Id:\n                    {review.beach_id}\n                     </div>\n                  <textarea defaultValue={review.review} onChange={this.handleChange}>\n                  </textarea>\n                  <button onClick={()=>this.props.deleteReview(review.id)}\n                  className=\"btn btn-info btn-sm\">Delete</button>\n                  <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n                  className=\"btn btn-warning btn-sm\">Update</button>\n                  <br></br></span>\n                    }\n                })\n        }\n        \n    }\n\n    render() {\n\n\n            \n        //     let reviews;\n        //     if (myReviews.length > 0){\n        //     reviews = myReviews.map((review)=>{\n        //    return <span key={review.id}>\n        //   <div>Beach Name:\n        //         {beach.name}\n        //      </div>\n        //   <textarea defaultValue={review.review} onChange={this.handleChange}>\n        //   </textarea>\n        //   <button onClick={()=>this.props.deleteReview(review.id)}\n        //   className=\"btn btn-info btn-sm\">Delete</button>\n        //   <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n        //   className=\"btn btn-warning btn-sm\">Update</button>\n        //   <br></br></span>\n        //   })\n        //   }else{\n        //       return <h2>Loading...</h2>\n        //   }\n            \n\n        \n        return (\n            <div className=\"container reviews\" >\n            <div>Reviews of Beaches</div>\n                {/* <button>All Beach Reviews</button> */}\n                <div>\n                {setsometnig}\n                {!this.props.reviews ?  null : this.setsometnig() }\n                {!this.props.reviews ?  null : console.log(\"reveeeeeews\", this.reviewsLoaded()) }\n\n            {/* {allReviews} */}\n                </div>\n            </div>\n            )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}