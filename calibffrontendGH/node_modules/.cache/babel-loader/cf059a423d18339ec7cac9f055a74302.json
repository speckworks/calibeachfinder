{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport MapContainer from '../src/containers/mapcontainer';\nimport './index.css';\nimport SearchForm from '../src/components/searchform.js';\nimport Favbeach from '../src/components/favbeach';\nimport ReviewForm from '../src/components/reviewform';\nimport Reviews from '../src/components/reviews';\nimport Userbeaches from '../src/components/userbeaches';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userbeaches: [],\n      newReview: [],\n      reviews: [],\n      results: [],\n      displayBeach: [],\n      user: {\n        id: 1\n      },\n      geocode: {\n        lat: \"\",\n        long: \"\"\n      }\n    };\n\n    this.addReview = review => {\n      let reviews = this.state.reviews;\n      this.setState({\n        reviews: reviews\n      });\n    };\n\n    this.grabBeaches = async QlatLong => {\n      let rawBeaches = await fetch('http://localhost:3000/favbeaches');\n      let beaches = await rawBeaches.json();\n      let fbeach = beaches.filter(beach => {\n        return parseFloat(beach.lat) <= QlatLong.lat + .05 && parseFloat(beach.lat) >= QlatLong.lat - .05;\n      });\n      let newBeaches = fbeach;\n      this.setState({\n        results: newBeaches\n      });\n    };\n\n    this.queryCode = responseObj => {\n      let QlatLong = {};\n\n      if (responseObj.results.length > 0) {\n        QlatLong.lat = responseObj.results[0].geometry.location.lat;\n        QlatLong.lng = responseObj.results[0].geometry.location.lng;\n      } else {\n        QlatLong = {\n          lat: 37.8591,\n          lng: 122.4853\n        };\n      } // console.log(\"default\", QlatLong)\n\n\n      this.grabBeaches(QlatLong);\n    };\n\n    this.displayBeach = clickedBeach => {\n      if (this.displayBeach.length > 0) {\n        console.log(\"clickedBeach\", clickedBeach);\n        this.setState({\n          displayBeach: clickedBeach\n        });\n      }\n    };\n\n    this.refreshBeaches = event => {\n      this.setState({\n        displayBeach: []\n      });\n    };\n\n    this.deleteReview = review_id => {\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let reviews = this.state.reviews.filter(review => review.id !== review_id);\n        this.setState({\n          reviews: reviews\n        });\n      });\n    };\n\n    this.updateReview = (review, newReview) => {\n      console.log(review, newReview);\n      let review_id = review.id;\n      let reviewPatch = {\n        user_id: 1,\n        favbeach_id: review.favbeach_id,\n        review: newReview\n      };\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'PATCH',\n        body: JSON.stringify(reviewPatch),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        return console.log(respObj);\n      });\n    };\n\n    this.addBeachtoUBs = beach => {\n      const favbeach_id = beach.id;\n      const user_id = 1;\n      const name = beach.name;\n      const userbeach = {\n        favbeach_id: favbeach_id,\n        user_id: user_id,\n        name: name\n      };\n      const url = \"http://localhost:3000/userbeaches\";\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(userbeach),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(res => {\n        console.log('Success:', res);\n        console.log(\"Adding Beach to User Beaches\", beach);\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/reviews\").then(res => res.json()).then(resObj => {\n      console.log(resObj);\n      this.setState({\n        reviews: resObj\n      });\n    });\n    fetch(\"http://localhost:3000/userbeaches\").then(res => res.json()).then(resObj => {\n      console.log(resObj);\n      this.setState({\n        userbeaches: resObj\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"CALIFORNIA BEACH FINDER\", React.createElement(\"div\", {\n      id: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      grabBeaches: this.grabBeaches,\n      queryCode: this.queryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"userbeaches\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Userbeaches, {\n      userbeaches: this.state.userbeaches,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"fav-beach\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Favbeach, {\n      beach: this.state.displayBeach,\n      refreshBeaches: this.refreshBeaches,\n      addBeachtoUBs: this.addBeachtoUBs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"map-showcase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      beaches: this.state.results,\n      displayBeach: this.displayBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"reviewform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(ReviewForm, {\n      displayBeach: this.state.displayBeach,\n      addReview: this.addReview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Reviews, {\n      reviews: this.state.reviews,\n      beaches: this.state.results,\n      deleteReview: this.deleteReview,\n      updateReview: this.updateReview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js"],"names":["React","Component","MapContainer","SearchForm","Favbeach","ReviewForm","Reviews","Userbeaches","App","state","userbeaches","newReview","reviews","results","displayBeach","user","id","geocode","lat","long","addReview","review","setState","grabBeaches","QlatLong","rawBeaches","fetch","beaches","json","fbeach","filter","beach","parseFloat","newBeaches","queryCode","responseObj","length","geometry","location","lng","clickedBeach","console","log","refreshBeaches","event","deleteReview","review_id","url","method","then","res","catch","error","respObj","updateReview","reviewPatch","user_id","favbeach_id","body","JSON","stringify","headers","addBeachtoUBs","name","userbeach","componentDidMount","resObj","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MapContainer from '../src/containers/mapcontainer'\nimport './index.css';\nimport SearchForm from '../src/components/searchform.js'\nimport Favbeach from '../src/components/favbeach'\nimport ReviewForm from '../src/components/reviewform'\nimport Reviews from '../src/components/reviews'\nimport Userbeaches from '../src/components/userbeaches'\n\nexport default class App extends Component {\n    state = {\n        userbeaches:[],\n        newReview:[],\n        reviews:[],\n        results:[],\n        displayBeach:[],\n        user: {\n            id: 1\n        },\n        geocode:{lat:\"\",\n                long:\"\"}\n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:3000/reviews\")\n        .then(res=> res.json())\n        .then(resObj=>{\n            console.log(resObj)\n            this.setState({reviews:resObj})\n        })\n\n        fetch(\"http://localhost:3000/userbeaches\")\n        .then(res=> res.json())\n        .then(resObj=>{\n            console.log(resObj)\n            this.setState({userbeaches:resObj})\n        })\n    }\n\n    addReview = (review) => {\n        let reviews = this.state.reviews\n        this.setState({\n            reviews:reviews\n        })\n    }\n    \n    grabBeaches = async (QlatLong) => {\n        let rawBeaches = await fetch('http://localhost:3000/favbeaches')\n        let beaches = await rawBeaches.json()\n        let fbeach = beaches.filter(beach => {\n            return parseFloat(beach.lat) <= QlatLong.lat+.05 && \n            parseFloat(beach.lat) >= QlatLong.lat-.05\n        })\n        let newBeaches = fbeach\n        this.setState({results:newBeaches})\n    }\n\n\n\n    queryCode = (responseObj) => {\n        let QlatLong = {}\n        if (responseObj.results.length >0){\n            QlatLong.lat = responseObj.results[0].geometry.location.lat\n            QlatLong.lng =  responseObj.results[0].geometry.location.lng\n        }else{\n            QlatLong = {lat:37.8591,lng:122.4853}\n        }\n            // console.log(\"default\", QlatLong)\n        this.grabBeaches(QlatLong)\n    }\n\n    displayBeach = (clickedBeach) => {\n        if(this.displayBeach.length > 0){\n        console.log(\"clickedBeach\",clickedBeach)\n        this.setState({displayBeach:clickedBeach})}\n    }\n    \n    refreshBeaches = (event) => {\n        this.setState({displayBeach:[]})\n    }\n    \n    deleteReview = (review_id) => {\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method: 'DELETE'})\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n            let reviews = this.state.reviews.filter(review => review.id !== review_id)\n            this.setState({reviews:reviews})\n        })  \n    }\n    \n    updateReview = (review, newReview) => {\n        console.log(review, newReview)\n        let review_id = review.id\n        let reviewPatch = {user_id:1, favbeach_id:review.favbeach_id, review:newReview}\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method:'PATCH',\n            body:JSON.stringify(reviewPatch),\n            headers: {'content-type':'application/json'}\n            })\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n           return console.log(respObj)\n        })\n    }\n\n    addBeachtoUBs = (beach) => {\n        const favbeach_id = beach.id\n        const user_id = 1\n        const name = beach.name\n        const userbeach = {favbeach_id:favbeach_id, user_id:user_id, name:name}\n        const url = \"http://localhost:3000/userbeaches\"\n        fetch(url, {method: 'POST',\n        body:JSON.stringify(userbeach),\n        headers: {'content-type':'application/json'}\n        }).then(res => res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(res => {\n            console.log('Success:',res)\n            console.log(\"Adding Beach to User Beaches\", beach)\n        })\n    }\n    \n    render() {  \n        return (\n            <div id=\"root\">\n                    CALIFORNIA BEACH FINDER\n                    <div id=\"search-bar\">\n                    <SearchForm grabBeaches={this.grabBeaches}\n                                queryCode={this.queryCode}\n                    />\n                    </div>\n                    <div id=\"userbeaches\">\n                    <Userbeaches\n                        userbeaches={this.state.userbeaches}\n                    />\n                    </div>\n                    <div id=\"fav-beach\">\n                    <Favbeach beach={this.state.displayBeach}\n                        refreshBeaches={this.refreshBeaches}\n                        addBeachtoUBs={this.addBeachtoUBs}\n                    />                \n                    </div>\n                    <div id=\"map-showcase\"> \n                    <MapContainer beaches={this.state.results} \n                    displayBeach={this.displayBeach}/>\n                    </div>\n                    <div id=\"reviewform\">\n                    <ReviewForm displayBeach={this.state.displayBeach}\n                                addReview={this.addReview}\n                    />\n                    </div>\n                    <div id=\"reviews\">\n                    <Reviews reviews={this.state.reviews}\n                            beaches={this.state.results}\n                            deleteReview={this.deleteReview}\n                            updateReview={this.updateReview}\n                    />\n                    </div>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}