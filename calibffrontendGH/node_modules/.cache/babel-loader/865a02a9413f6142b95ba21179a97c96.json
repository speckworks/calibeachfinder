{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport MapContainer from '../src/containers/mapcontainer';\nimport './index.css';\nimport SearchForm from '../src/components/searchform.js';\nimport Favbeach from '../src/components/favbeach';\nimport ReviewForm from '../src/components/reviewform';\nimport Reviews from '../src/components/reviews';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reviews: [],\n      results: [],\n      displayBeach: [],\n      user: {\n        id: 1\n      },\n      geocode: {\n        lat: \"\",\n        long: \"\"\n      }\n    };\n\n    this.grabBeaches = async QlatLong => {\n      let rawBeaches = await fetch('http://localhost:3000/favbeaches');\n      let beaches = await rawBeaches.json();\n      let fbeach = beaches.filter(beach => {\n        return parseFloat(beach.lat) <= QlatLong.lat + .05 && parseFloat(beach.lat) >= QlatLong.lat - .05;\n      });\n      let newBeaches = fbeach; // console.log(fbeach)\n\n      this.setState({\n        results: newBeaches\n      });\n    };\n\n    this.queryCode = responseObj => {\n      let QlatLong = {};\n\n      if (responseObj.results.length > 0) {\n        QlatLong.lat = responseObj.results[0].geometry.location.lat;\n        QlatLong.lng = responseObj.results[0].geometry.location.lng;\n      } else {\n        QlatLong = {\n          lat: 37.8591,\n          lng: 122.4853\n        };\n      } // console.log(\"default\", QlatLong)\n\n\n      this.grabBeaches(QlatLong);\n    };\n\n    this.displayBeach = clickedBeach => {\n      if (this.displayBeach.length > 0) {\n        console.log(\"clickedBeach\", clickedBeach);\n        this.setState({\n          displayBeach: clickedBeach\n        });\n      }\n\n      fetch(\"\");\n    };\n\n    this.refreshBeaches = event => {\n      this.setState({\n        displayBeach: []\n      });\n    };\n\n    this.deleteReview = review_id => {\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let reviews = this.state.reviews.filter(review => review.id !== review_id);\n        this.setState({\n          reviews: reviews\n        });\n      });\n    };\n\n    this.updateReview = review => {\n      console.log(review);\n      let review_id = review.id;\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'PATCH'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        return respObj;\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/reviews\").then(res => res.json()).then(resObj => {\n      console.log(resObj);\n      this.setState({\n        reviews: resObj\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      grabBeaches: this.grabBeaches,\n      queryCode: this.queryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"fav-beach\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Favbeach, {\n      beach: this.state.displayBeach,\n      refreshBeaches: this.refreshBeaches,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"fav-beach\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(ReviewForm, {\n      displayBeach: this.state.displayBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"reviews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Reviews, {\n      reviews: this.state.reviews,\n      deleteReview: this.deleteReview,\n      updateReview: this.updateReview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"map-showcase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      beaches: this.state.results,\n      displayBeach: this.displayBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js"],"names":["React","Component","MapContainer","SearchForm","Favbeach","ReviewForm","Reviews","App","state","reviews","results","displayBeach","user","id","geocode","lat","long","grabBeaches","QlatLong","rawBeaches","fetch","beaches","json","fbeach","filter","beach","parseFloat","newBeaches","setState","queryCode","responseObj","length","geometry","location","lng","clickedBeach","console","log","refreshBeaches","event","deleteReview","review_id","url","method","then","res","catch","error","respObj","review","updateReview","componentDidMount","resObj","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MapContainer from '../src/containers/mapcontainer'\nimport './index.css';\nimport SearchForm from '../src/components/searchform.js'\nimport Favbeach from '../src/components/favbeach'\nimport ReviewForm from '../src/components/reviewform'\nimport Reviews from '../src/components/reviews'\nexport default class App extends Component {\n    state = {\n        reviews:[],\n        results:[],\n        displayBeach:[],\n        user: {\n            id: 1\n        },\n        geocode:{lat:\"\",\n                long:\"\"}\n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:3000/reviews\")\n        .then(res=> res.json())\n        .then(resObj=>{\n            console.log(resObj)\n            this.setState({reviews:resObj})\n        })\n    }\n    grabBeaches = async (QlatLong) => {\n        let rawBeaches = await fetch('http://localhost:3000/favbeaches')\n        let beaches = await rawBeaches.json()\n        let fbeach = beaches.filter(beach => {\n            return parseFloat(beach.lat) <= QlatLong.lat+.05 && \n            parseFloat(beach.lat) >= QlatLong.lat-.05\n        })\n        let newBeaches = fbeach\n        // console.log(fbeach)\n        this.setState({results:newBeaches})\n    }\n\n    queryCode = (responseObj) => {\n        let QlatLong = {}\n        if (responseObj.results.length >0){\n            QlatLong.lat = responseObj.results[0].geometry.location.lat\n            QlatLong.lng =  responseObj.results[0].geometry.location.lng\n        }else{\n            QlatLong = {lat:37.8591,lng:122.4853}\n        }\n            // console.log(\"default\", QlatLong)\n        this.grabBeaches(QlatLong)\n    }\n\n    displayBeach = (clickedBeach) => {\n        if(this.displayBeach.length > 0){\n        console.log(\"clickedBeach\",clickedBeach)\n        this.setState({displayBeach:clickedBeach})}\n        fetch(\"\")\n    }\n    \n    refreshBeaches = (event) => {\n        this.setState({displayBeach:[]})\n    }\n    \n    deleteReview = (review_id) => {\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method: 'DELETE'})\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n            let reviews = this.state.reviews.filter(review => review.id !== review_id)\n            this.setState({reviews:reviews})\n        })  \n    }\n\n    updateReview = (review) => {\n        console.log(review)\n        let review_id = review.id\n\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method:'PATCH'})\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n           return respObj\n        })\n        \n    }\n    \n    \n    render() {  \n        return (\n            <div>\n                    <div id=\"search-bar\">\n                    <SearchForm grabBeaches={this.grabBeaches}\n                                queryCode={this.queryCode}\n                    />\n                    </div>\n                    <div id=\"fav-beach\">\n                    <Favbeach beach={this.state.displayBeach}\n                        refreshBeaches={this.refreshBeaches}\n                    />                \n                    </div>\n                    <div id=\"fav-beach\">\n                    <ReviewForm displayBeach={this.state.displayBeach}/>\n                    </div>\n                    <div id=\"reviews\">\n                    <Reviews reviews={this.state.reviews}\n                            deleteReview={this.deleteReview}\n                            updateReview={this.updateReview}\n                    />\n                    </div>\n                    <div id=\"map-showcase\"> \n                    <MapContainer beaches={this.state.results} \n                    displayBeach={this.displayBeach}/>\n                    </div>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}