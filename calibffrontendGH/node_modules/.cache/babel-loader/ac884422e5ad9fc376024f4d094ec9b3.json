{"ast":null,"code":"var _jsxFileName = \"/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport MapContainer from '../src/containers/mapcontainer';\nimport './index.css';\nimport SearchForm from '../src/components/searchform';\nimport Favbeach from '../src/components/favbeach';\nimport ReviewForm from '../src/components/reviewform';\nimport Reviews from '../src/components/reviews';\nimport Userbeaches from '../src/components/userbeaches';\nimport Navbar from '../src/components/Navbar';\nimport { Route, Switch } from 'react-router-dom';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userbeaches: [],\n      reviews: [],\n      results: [],\n      displayBeach: [],\n      user: {\n        id: 1\n      },\n      geocode: {\n        lat: \"\",\n        long: \"\"\n      }\n    };\n\n    this.addReview = review => {\n      let reviews = this.state.reviews;\n      reviews.unshift(review);\n      this.setState({\n        reviews\n      });\n    };\n\n    this.deleteReview = review_id => {\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let reviews = this.state.reviews.filter(review => review.id !== review_id);\n        this.setState({\n          reviews: reviews\n        });\n      });\n    };\n\n    this.reviewBeach = (props, beach_id) => {\n      props.history.push('/reviews');\n    };\n\n    this.grabBeaches = async QlatLong => {\n      let rawBeaches = await fetch('http://localhost:3000/favbeaches');\n      let beaches = await rawBeaches.json();\n      let newBeaches = beaches.filter(beach => {\n        return parseFloat(beach.lat) <= QlatLong.lat + .05 && parseFloat(beach.lat) >= QlatLong.lat - .05;\n      }); // console.log(newBeaches)\n\n      this.setState({\n        results: newBeaches\n      });\n    };\n\n    this.queryCode = responseObj => {\n      let QlatLong = {};\n\n      if (responseObj.results.length > 0) {\n        QlatLong.lat = responseObj.results[0].geometry.location.lat;\n        QlatLong.lng = responseObj.results[0].geometry.location.lng;\n      } else {\n        alert(\"Your Please Resubmit your user Query\"); // QlatLong = {lat:37.8591,lng:122.4853}\n      }\n\n      console.log(\"default\", QlatLong);\n      this.grabBeaches(QlatLong);\n    };\n\n    this.displayBeach = (clickedBeach, props) => {\n      this.setState({\n        displayBeach: clickedBeach\n      }); // console.log(\"favbeach props\", props)\n\n      props.history.push('/favbeach');\n      console.log(\"clickedBeach\", clickedBeach);\n    };\n\n    this.userBeaches = props => {\n      props.history.push('/userbeaches');\n    };\n\n    this.returnHome = props => {\n      if (props.history) {\n        props.history.push('/');\n      } else {\n        this.props.push(props.history = \"/\");\n      }\n    };\n\n    this.updateReview = (review, newReview) => {\n      console.log(review, newReview);\n      let review_id = review.id;\n      let reviewPatch = {\n        user_id: 1,\n        favbeach_id: review.favbeach_id,\n        review: newReview\n      };\n      const url = `http://localhost:3000/reviews/${review_id}`;\n      fetch(url, {\n        method: 'PATCH',\n        body: JSON.stringify(reviewPatch),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        return console.log(respObj);\n      });\n    };\n\n    this.addBeachtoUBs = props => {\n      const favbeach_id = props.beach.id;\n      const user_id = 1;\n      const name = props.beach.name;\n      const userbeach = {\n        favbeach_id: favbeach_id,\n        user_id: user_id,\n        name: name\n      };\n      const url = \"http://localhost:3000/userbeaches\";\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(userbeach),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(res => {\n        console.log('Success:', res);\n        let userbeaches = this.state.userbeaches;\n        userbeaches.push(userbeach);\n        this.setState({\n          userbeaches: userbeaches\n        });\n        props.history.push('/userbeaches');\n      });\n    };\n\n    this.deleteFromUBs = beach => {\n      const url = `http://localhost:3000/userbeaches/${beach.id}`;\n      fetch(url, {\n        method: 'DELETE'\n      }).then(res => res.json()).catch(error => console.error(\"Error:\", error)).then(respObj => {\n        let userbeaches = this.state.userbeaches.filter(userbeach => userbeach.id !== beach.id);\n        this.setState({\n          userbeaches: userbeaches\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/reviews\").then(res => res.json()).then(resObj => {\n      console.log(resObj);\n      this.setState({\n        reviews: resObj\n      });\n    });\n    fetch(\"http://localhost:3000/userbeaches\").then(res => res.json()).then(resObj => {\n      console.log(resObj);\n      this.setState({\n        userbeaches: resObj\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"CALIFORNIA BEACH FINDER\", React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: props => React.createElement(\"div\", {\n        id: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(SearchForm, Object.assign({}, props, {\n        grabBeaches: this.grabBeaches,\n        queryCode: this.queryCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: props => React.createElement(\"div\", {\n        id: \"map-showcase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(MapContainer, Object.assign({}, props, {\n        beaches: this.state.results,\n        displayBeach: this.displayBeach,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/favbeach',\n      render: props => React.createElement(\"div\", {\n        id: \"fav-beach\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Favbeach, Object.assign({\n        id: \"favbeach\"\n      }, props, {\n        beach: this.state.displayBeach,\n        refreshBeaches: this.refreshBeaches,\n        addBeachtoUBs: this.addBeachtoUBs,\n        userBeaches: this.userBeaches,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/userbeaches',\n      render: props => React.createElement(\"div\", {\n        id: \"userbeaches\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Userbeaches, Object.assign({}, props, {\n        userbeaches: this.state.userbeaches,\n        deleteFromUBs: this.deleteFromUBs,\n        returnHome: this.returnHome,\n        reviewBeach: this.reviewBeach,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/reviews',\n      render: props => React.createElement(\"div\", {\n        id: \"reviewform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(ReviewForm, {\n        displayBeach: this.state.displayBeach,\n        addReview: this.addReview,\n        returnHome: this.returnHome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: '/reviews',\n      render: props => React.createElement(\"div\", {\n        id: \"reviews\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Reviews, {\n        reviews: this.state.reviews,\n        beaches: this.state.results,\n        deleteReview: this.deleteReview,\n        updateReview: this.updateReview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnspeck/Flatiron - Labs - etc./Mod_5/sandc-frontend/sandcfrontend/src/App.js"],"names":["React","Component","MapContainer","SearchForm","Favbeach","ReviewForm","Reviews","Userbeaches","Navbar","Route","Switch","App","state","userbeaches","reviews","results","displayBeach","user","id","geocode","lat","long","addReview","review","unshift","setState","deleteReview","review_id","url","fetch","method","then","res","json","catch","error","console","respObj","filter","reviewBeach","props","beach_id","history","push","grabBeaches","QlatLong","rawBeaches","beaches","newBeaches","beach","parseFloat","queryCode","responseObj","length","geometry","location","lng","alert","log","clickedBeach","userBeaches","returnHome","updateReview","newReview","reviewPatch","user_id","favbeach_id","body","JSON","stringify","headers","addBeachtoUBs","name","userbeach","deleteFromUBs","componentDidMount","resObj","render","refreshBeaches"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MapContainer from '../src/containers/mapcontainer'\nimport './index.css';\nimport SearchForm from '../src/components/searchform'\nimport Favbeach from '../src/components/favbeach'\nimport ReviewForm from '../src/components/reviewform'\nimport Reviews from '../src/components/reviews'\nimport Userbeaches from '../src/components/userbeaches'\nimport Navbar from '../src/components/Navbar'\nimport {Route, Switch} from 'react-router-dom'\n\n\nexport default class App extends Component {\n    state = {\n        userbeaches:[],\n        reviews:[],\n        results:[],\n        displayBeach:[],\n        user: {\n            id: 1\n        },\n        geocode:{lat:\"\",\n                long:\"\"}\n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:3000/reviews\")\n        .then(res=> res.json())\n        .then(resObj=>{\n            console.log(resObj)\n            this.setState({reviews:resObj})\n        })\n\n        fetch(\"http://localhost:3000/userbeaches\")\n        .then(res=> res.json())\n        .then(resObj=>{\n            console.log(resObj)\n            this.setState({userbeaches:resObj})\n        })\n    }\n    \n    addReview = (review) => {\n        let reviews = this.state.reviews\n        reviews.unshift(review)\n        this.setState({reviews})\n    }\n   \n    deleteReview = (review_id) => {\n                            const url = `http://localhost:3000/reviews/${review_id}`\n                            fetch(url, {method: 'DELETE'})\n                            .then(res=>res.json())\n                            .catch(error=>console.error(\"Error:\", error))\n                            .then(respObj=>{\n                                let reviews = this.state.reviews.filter(review => review.id !== review_id)\n                                this.setState({reviews:reviews})\n                            })  \n                        }\n\n                       \n    reviewBeach = (props, beach_id) => {\n        props.history.push('/reviews')\n    }\n                        \n    \n    grabBeaches = async (QlatLong) => {\n        let rawBeaches = await fetch('http://localhost:3000/favbeaches')\n        let beaches = await rawBeaches.json()\n        let newBeaches = beaches.filter(beach => {\n            return parseFloat(beach.lat) <= QlatLong.lat+.05 && \n            parseFloat(beach.lat) >= QlatLong.lat-.05\n        })\n        // console.log(newBeaches)\n        this.setState({results:newBeaches})\n    }\n    \n\n    queryCode = (responseObj) => {\n        let QlatLong = {}\n        if (responseObj.results.length >0){\n            QlatLong.lat = responseObj.results[0].geometry.location.lat\n            QlatLong.lng =  responseObj.results[0].geometry.location.lng\n        }else{\n            alert(\"Your Please Resubmit your user Query\")\n            // QlatLong = {lat:37.8591,lng:122.4853}\n        }\n            console.log(\"default\", QlatLong)\n        this.grabBeaches(QlatLong)\n    }\n\n    displayBeach = (clickedBeach, props) => {\n        this.setState({displayBeach:clickedBeach})\n        // console.log(\"favbeach props\", props)\n        props.history.push('/favbeach')\n        console.log(\"clickedBeach\",clickedBeach)\n    }\n\n    userBeaches = (props) =>{\n        props.history.push('/userbeaches')\n    }\n\n    returnHome = (props) =>{\n        if(props.history){\n        props.history.push('/')\n        }else{\n            this.props.push(props.history=\"/\")\n        }\n    }\n    \n    // refreshBeaches = (event) => {\n    //     this.setState({displayBeach:[]})\n    // }\n    \n    updateReview = (review, newReview) => {\n        console.log(review, newReview)\n        let review_id = review.id\n        let reviewPatch = {user_id:1, favbeach_id:review.favbeach_id, review:newReview}\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method:'PATCH',\n            body:JSON.stringify(reviewPatch),\n            headers: {'content-type':'application/json'}\n            })\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n           return console.log(respObj)\n        })\n    }\n\n    addBeachtoUBs = (props) => {\n        const favbeach_id = props.beach.id\n        const user_id = 1\n        const name = props.beach.name\n        const userbeach = {favbeach_id:favbeach_id, user_id:user_id, name:name}\n        const url = \"http://localhost:3000/userbeaches\"\n        fetch(url, {method: 'POST',\n        body:JSON.stringify(userbeach),\n        headers: {'content-type':'application/json'}\n        }).then(res => res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(res => {\n            console.log('Success:',res)\n            let userbeaches = this.state.userbeaches\n            userbeaches.push(userbeach)\n           this.setState({userbeaches:userbeaches})\n           props.history.push('/userbeaches')\n        })\n    }\n\n    deleteFromUBs = (beach) => {\n        const url = `http://localhost:3000/userbeaches/${beach.id}`\n        fetch(url, {method: 'DELETE'})\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n            let userbeaches = this.state.userbeaches.filter(userbeach => userbeach.id !== beach.id)\n            this.setState({userbeaches:userbeaches})\n        })  \n    }\n    \n    \n    render() {  \n        return (\n            <div id=\"root\">\n                    CALIFORNIA BEACH FINDER\n                    <Navbar/>\n                    <Route exact path={'/'} render= {(props) => \n                    <div id=\"search-bar\">\n                                <SearchForm {...props} \n                                grabBeaches={this.grabBeaches}\n                                queryCode={this.queryCode}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/'} render= {(props) => \n                    <div id=\"map-showcase\"> \n                                <MapContainer {...props}\n                                beaches={this.state.results} \n                                displayBeach={this.displayBeach}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/favbeach'} render= {(props) =>\n                   <div id=\"fav-beach\">\n                    <Favbeach id=\"favbeach\" {...props} \n                        beach={this.state.displayBeach}\n                        refreshBeaches={this.refreshBeaches}\n                        addBeachtoUBs={this.addBeachtoUBs}\n                        userBeaches={this.userBeaches}\n                    />\n                    </div>           \n                    }    \n                    /> \n\n                    <Route exact path={'/userbeaches'} render= {(props) => \n                    <div id=\"userbeaches\">\n                    <Userbeaches {...props}\n                    userbeaches={this.state.userbeaches}\n                    deleteFromUBs={this.deleteFromUBs}\n                    returnHome={this.returnHome}\n                    reviewBeach={this.reviewBeach}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render= {(props) =>\n                    <div id=\"reviewform\">\n                    <ReviewForm displayBeach={this.state.displayBeach}\n                                addReview={this.addReview}\n                                returnHome={this.returnHome}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render={(props) =>\n                    <div id=\"reviews\">\n                    <Reviews reviews={this.state.reviews}\n                            beaches={this.state.results}\n                            deleteReview={this.deleteReview}\n                            updateReview={this.updateReview}\n                    />\n                    </div>}\n                    />\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}