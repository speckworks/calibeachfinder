{"version":3,"sources":["components/beachchart.js","containers/mapcontainer.js","components/searchform.js","components/favbeach.js","components/reviewform.js","components/reviews.js","components/userbeaches.js","components/Login.js","App.js","serviceWorker.js","index.js","assets/backgrounds/beach-marker.png"],"names":["data","mapStyles","width","height","float","position","transform","color","borderRadius","textShadow","MapContainer","displayMarkers","marker","require","props","beaches","map","beach","index","icon","url","scaledSize","window","google","maps","Size","key","id","displayBeach","lat","lng","onClick","center","this","qLatLong","className","style","zoom","initialCenter","Component","GoogleApiWrapper","apiKey","process","SearchForm","state","city","handleChange","event","preventDefault","setState","target","name","value","onSubmit","fetch","then","res","json","respObj","queryCode","onChange","type","placeholder","display","defaultValue","autoComplete","Favbeach","src","photo_1","alt","ez4strollers","dog_friendly","campground","fishing","boating","addBeachtoUBs","console","log","ReviewForm","handleSubmit","newBeachReview","newBeachReviewObj","review","beach_id","user_id","method","body","JSON","stringify","headers","catch","error","addReview","Reviews","reviews","allReviews","sort","a","b","parseInt","deleteReview","updateReview","Userbeaches","userBeaches","userbeachesArr","userbeaches","filter","userbeach","deleteFromUBs","reviewBeach","Login","logIn","username","password","errors","submitLogin","logInSubmitted","setToken","signUpSubmitted","htmlFor","labels","colorHex","options","legend","fontColor","fontSize","tooltips","titleFontSize","bodyFontSize","opacity","beachchart","dbCount","rawBeaches","toLowerCase","length","toFixed","sbCount","fbCount","bbCount","bike_path","rrCount","restrooms","cCount","datasets","backgroundColor","hoverBackgroundColor","App","results","user","geocode","long","token","localStorage","loggedInUserId","userId","logOutClick","clear","reviewRes","filteredReviews","unshift","review_id","grabBeaches","QlatLong","async","newBeaches","parseFloat","responseObj","geometry","location","alert","clickedBeach","history","push","to","pathname","newReview","reviewPatch","resArr","exact","path","render","refreshBeaches","returnHome","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a6fdad4c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Pie} from 'react-chartjs-2';\n\nlet labels = [\"Dog Friendly 🐕\", \"Stroller Friendly 👶🏻\", \"Fishing 🎣\", \"Biking 🚲\", \"Restrooms 🚻\", \"Camping ⛺️\"]\nlet colorHex = ['#FB3640', '#EFCA08', '#43AA8B', 'ff5e00', '#115DA8', '#8A2BE2']\nlet data;\n\nconst options = {\n    legend: {\n        display:true,\n        position:'left',\n        labels: {\n            // This more specific font property overrides the global property\n            fontColor:\"#000000\",\n            fontSize:30\n        }\n        },\n    tooltips: {\n            titleFontSize: 20,\n            bodyFontSize: 20,\n            opacity:'none'\n          }\n    \n    \n    }\n\nexport default class beachchart extends Component {\n    render() {\n        \n        if (!this.props){\n            console.log(\"no beaches yet\")\n            return null\n        }else{\n            const dogBeaches = this.props.rawBeaches.filter(beach => beach.dog_friendly.toLowerCase() === \"yes\")\n            let dbCount = ((dogBeaches.length/1563)*100).toFixed(2)\n            console.log(dbCount)\n            const strollerBeaches = this.props.rawBeaches.filter(beach => beach.ez4strollers.toLowerCase() === \"yes\")\n            let sbCount = ((strollerBeaches.length/1563)*100).toFixed(2)\n            const fishBeaches = this.props.rawBeaches.filter(beach => beach.fishing.toLowerCase() === \"yes\")\n            let fbCount = ((fishBeaches.length/1563)*100).toFixed(2)\n            const bikeBeaches = this.props.rawBeaches.filter(beach => beach.bike_path.toLowerCase() === \"yes\")\n            let bbCount = ((bikeBeaches.length/1563)*100).toFixed(2)\n            const rrBeaches = this.props.rawBeaches.filter(beach => beach.restrooms.toLowerCase() === \"yes\")\n            let rrCount = ((rrBeaches.length/1563)*100).toFixed(2)\n            const cBeaches = this.props.rawBeaches.filter(beach => beach.campground.toLowerCase() === \"yes\")\n            let cCount = ((cBeaches.length/1563)*100).toFixed(2)\n                    \n                    data = {\n                        labels: labels,\n                        datasets: [{\n                            data: [dbCount, sbCount, fbCount, bbCount, rrCount,cCount],\n                            backgroundColor: colorHex,\n                            hoverBackgroundColor: colorHex,\n                        }],\n                        backgroundColor:'rgba(0, 0, 0, 0.5)'\n                    };\n                console.log(dbCount,sbCount, fbCount)\n                }\n        // console.log(\"rawbeaches\",`${this.props.rawBeaches[0].fishing}`)\n        return (\n            <div>\n                <h2 id=\"piechart\" className=\"beachDataFont\">Beach Data</h2>\n                <h4 id=\"piechart\" className=\"beachDataFont\">Percentages based on all beach visitor reviews for 1563 beaches as provided by www.coastal.ca.gov.</h4>\n                <Pie id=\"piechart\"\n                 className=\"chartText\" \n                 data={data} \n                 options={options}\n                style={{backgroundColor:\"#000000\"}}\n                 />\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n    width:\"620px\",\n    height: '80%',\n    float:\"left\",\n    position:\"none\",\n    transform:\"translate(-235px,-690px)\",\n    color:\"black\",\n    borderRadius:\"100%\",\n    textShadow:\"none\"\n  };\n\n  \n  // let updateCenter; \n  class MapContainer extends Component {\n             \n    displayMarkers = () => {\n      let marker = require(\"../assets/backgrounds/beach-marker.png\")\n      let beachesArray = this.props.beaches\n      return beachesArray.map((beach, index) => {\n        return <Marker \n      icon={{url: marker,\n        scaledSize: new window.google.maps.Size(40, 40)\n      }}\n      key={index} \n      id={index} \n      displayBeach={this.props.displayBeach}\n      position={{\n        lat: beach.lat,\n        lng: beach.lng\n                }}\n      onClick={() => this.props.displayBeach(beach, this.props) }/>\n    })\n  }\n  \n  render () {\n        let initialCenter = {\n          lat:37.8591,lng:-122.4853\n        }\n        let center = this.props.qLatLong\n        // console.log(\"latlongarray?\", this.props.qLatLong)\n        return (\n          // firstBeach ? <div>Loading...</div>:\n          <div className=\"map-container\">\n          <Map\n          id=\"map-showcase\"\n          style={mapStyles}\n          google={this.props.google}\n          zoom={11}\n          initialCenter={\n            initialCenter\n            }\n          center={center}\n          >\n            {/* {console.log(\"center\", center)} */}\n            {this.displayMarkers()}\n          </Map>\n          </div>\n\n\n)\n  }\n}\nconst API_KEY = process.env.REACT_APP_GOOGLE_MAPS_KEY\nexport default GoogleApiWrapper({\n    apiKey:API_KEY,\n  })(MapContainer);\n","\nimport React, { Component } from 'react'\n\nexport default class SearchForm extends Component {\n    state={city:\"\",\n    state:\"California\"}\n    \n    handleChange = (event) => {\n        event.preventDefault()\n        this.setState({...this.state, [event.target.name]:event.target.value})\n    }\n    \n    onSubmit = (event) => {\n        event.preventDefault()\n        let city = this.state.city\n        let state = this.state.state\n        const API_KEY1= process.env.REACT_APP_GOOGLE_MAPS_KEY2\n        // console.log(\"apikey1\", process.env)\n        fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${state}&key=${API_KEY1}`\n            ).then(res=>res.json())\n            .then(respObj =>{   \n                // console.log(respObj)\n                    this.props.queryCode(respObj)\n                    })\n                this.setState({city:\"\", state:\"\"})\n            }\n            \n    render() {\n        return (\n            <div >\n               <form id=\"searchform\" onSubmit={this.onSubmit}>\n                           Please Enter Your Location:\n                    <label>\n                    <input  onChange={this.handleChange} \n                            type=\"text\"\n                            placeholder=\"city\"\n                            name=\"city\" \n                            display=\"city\"\n                            defaultValue={this.state.city}\n                            autoComplete=\"off\"\n                            id=\"searchform_input\"\n                    >\n                    </input>\n                    </label>\n                    {/* <input  onChange={this.handleChange}\n                            type=\"text\"\n                            name=\"state\"\n                            placeholder=\"state\"\n                            defaultValue={this.state.state}\n                            autoComplete=\"off\">        \n                    </input> */}\n                    <div>\n                    <button \n                            type=\"submit\" \n                            value=\"Submit\"\n                            className=\"roundbutton\"\n                            >Submit\n                    </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Favbeach extends Component {\n    \n    render() {\n        \n        return (\n            <div id=\"favbeach\">\n                <div>\n                <img\n                    id=\"favbeachimg\" \n                    key={this.props.beach.id} \n                    src={this.props.beach.photo_1} \n                    alt=\"beach\">\n                </img>\n                <div id=\"detailtext\">\n                <div></div>\n                Beach: {this.props.beach.name}\n                <div></div>\n                Stroller Friendly: {!this.props.beach.ez4strollers ? \"No Info\": this.props.beach.ez4strollers}\n                <div></div>\n                Dog Friendly: {!this.props.beach.dog_friendly ? \"No Info\": this.props.beach.dog_friendly}\n                <div></div>\n                Camping: {!this.props.beach.campground ? \"No Info\": this.props.beach.campground}\n                <div></div>               \n                Fishing: {!this.props.beach.fishing ? \"No Info\": this.props.beach.fishing}\n                <div></div>\n                Boating: {!this.props.beach.boating ? \"No Info\": this.props.beach.boating}\n                </div>\n                </div>\n                {/* <button onClick={this.props.refreshBeaches}>Refresh Beaches</button> */}\n                   {/* <Link to=\"/userbeaches\">  */}\n                   <button className=\"roundbutton\"\n                    onClick={()=>this.props.addBeachtoUBs(this.props)}\n                    >\n                   {console.log(this.props)}\n                    Add This Beach to my Favs!\n                    </button>\n                    {/* </Link> */}\n                    {/* <button id=\"roundbutton\"\n                            onClick={()=>this.props.userBeaches(this.props)}\n                    > View My Favorite Beaches \n                    </button> */}\n            </div>\n           )    \n    }\n}","import React, { Component } from 'react'\n\n\nexport default class ReviewForm extends Component {\n    state = {\n        value: 'Please submit a beach review.'\n      };  \n\n    handleChange = (event) => {\n        this.setState({value:event.target.value});\n    }\n    \n    handleSubmit = (event) => {\n        // alert('Thanks for Your Review: ' + this.state.value);\n        event.preventDefault();\n        let newBeachReview = this.state.value\n        console.log(\"displayBeach\", this.props.displayBeach)\n        let beach_id = this.props.displayBeach.id \n        let newBeachReviewObj = {\n            review:newBeachReview,\n            beach_id:beach_id,\n            user_id:this.props.user_id \n        }\n        const url = \"http://localhost:3000/reviews\"\n        fetch(url, {method: 'POST',\n        body:JSON.stringify(newBeachReviewObj),\n        headers: {'content-type':'application/json'}\n        }).then(res => res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(res => {\n            console.log('Success:', res)\n            this.props.addReview(res)\n        })\n    }\n    \n    render() {\n        return (    \n                <div>\n                <div id=\"reviewform\">\n                <form onSubmit={this.handleSubmit}>\n                <label><div>\n                    Review for : {this.props.displayBeach.name}\n                    </div>\n                    <textarea value={this.state.value}  onChange={this.handleChange}/>\n                    <div>\n                <input className=\"roundbutton\" type=\"submit\" value=\"Submit\" />\n                </div>\n                </label>\n                </form>\n                </div>\n                </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Reviews extends Component {\n    \n    state = {\n        reviews:[]\n    };  \n    \n    handleChange = (event) => {\n        this.setState({reviews:event.target.value})\n    }\n    \n    render() {\n        const reviewsArr = this.props.reviews.sort((a,b) => b.id - a.id)\n        const allReviews = reviewsArr.map((review)=>{\n            if (review.user_id === parseInt(this.props.user_id)){\n                return <span key={review.id}>\n          <div>Beach:{review.beach_id\n             }</div>\n          <textarea defaultValue={review.review} onChange={this.handleChange}>\n          </textarea>\n          <button onClick={()=>this.props.deleteReview(review.id)}\n          className=\"roundbutton\">Delete</button>\n          <button onClick={()=>this.props.updateReview(review, this.state.reviews)}\n          className=\"roundbutton\">Update</button>\n          <br></br></span>\n            }else{\n                console.log(\"user\", review.user_id, this.props.user_id)\n               return <span></span>\n            }\n        })\n        return (\n            <div className=\"container reviews\" >\n            <div>Reviews of Beaches</div>\n                {/* <button>All Beach Reviews</button> */}\n                <div>\n            {allReviews}\n                </div>\n            </div>\n            )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Userbeaches extends Component {\n    \n    \n    render() {\n        let userbeachesArr = this.props.userbeaches.sort((a,b) => b.id - a.id)\n        let user_id = this.props.user_id\n\n        // let beaches = this.props.reviewBeaches\n        let userbeachesFiltered = userbeachesArr.filter(beaches=>beaches.user_id === user_id)\n\n        let userBeaches;\n        // console.log(\"user_id\", this.props.user_id)\n        // console.log(\"array of beach objects\", userbeachesArr)\n        // if (userbeachesArr.length > 0){\n        //   userBeaches = userbeachesArr.map((userbeach) => {\n        //     if (parseInt(userbeach.user_id) === user_id)\n        //     {\n\n        userBeaches = userbeachesFiltered.map((userbeach)=>{\n            return <span>\n                <div id=\"userbeach\">\n                    {/* {\"beach.user_id\", console.log(beach.user_id)} */}\n                    <div key={userbeach.beach_id}>\n                    {userbeach.name}\n                    <br></br>\n                    <img id=\"userbeachphoto\" \n                    src={userbeach.beach ? userbeach.beach.photo_1: \"loading\" }\n                    alt=\"no_image_available_for_this_beach\">\n                    </img>\n                    </div>\n                    <button id=\"userbeachesbuttons\" className=\"roundbuttonFavbeach\"\n                    onClick={()=>this.props.deleteFromUBs(userbeach)}>\n                    Delete Favorite\n                    </button>\n\n                    {/* <Link to=\"/reviews\">\n                    <button id=\"userbeachesbuttons\" >Review This Beach</button>\n                    </Link> */}\n                    <button id=\"userbeachesbuttons\" className=\"roundbuttonFavbeach\"\n                    onClick={()=>this.props.reviewBeach(this.props, userbeach.beach_id)}>\n                    Review Beach\n                    </button> \n                </div>\n            </span>\n        })\n       \n        return (\n            <div id=\"roundbutton\">\n                {/* <button id=\"roundbutton\"\n                        onClick={()=>this.props.returnHome(this.props)}\n                        >\n                        Return to Beachfinder Main\n                        </button> */}\n            <div id=\"favbeachbox\">     Favorite Beaches:\n                {userBeaches}\n                <div id=\"userbeach\">\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Login extends Component {\n    state = {\n        logIn: true,\n        username: \"\",\n        password: \"\",\n        errors: []\n      }    \n\n    onChange = event => {\n    this.setState({\n        [event.target.name]: event.target.value\n    })\n    }\n\n    submitLogin = (event) => {\n        event.preventDefault()\n        this.logInSubmitted(event)\n\n    }\n\n    logInSubmitted = (event) => {\n    event.preventDefault()\n    fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n        \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n        name: this.state.username,\n        password: this.state.password\n        })\n    }).then(res => res.json())\n        .then(data => {\n        if (data.errors) {\n            this.setState({\n            errors: data.errors\n            })\n        } else {\n            this.props.setToken(data)\n            this.setState({username:\"\",\n                            password:\"\"})\n        }\n        })\n    }\n\n    signUpSubmitted = (event) => {\n    event.preventDefault() \n    fetch(\"http://localhost:3000/users\", {\n        method: \"POST\",\n        headers: {\n        \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n        name: this.state.username,\n        password: this.state.password\n        })\n    }).then(res => res.json())\n        .then(data => {\n        if (data.errors) {\n            this.setState({\n            errors: data.errors\n            })\n        } else {\n            this.props.setToken(data)\n            // this.props.addData(data)\n        }\n        })\n    }\n\n    render() {\n        return <>\n            <ul id=\"signup\">\n            {\n                this.state.errors.map(error=> <li>{error}</li>)\n            }\n            </ul>\n        {\n            this.state.logIn\n            ?\n            <section id=\"signup\">\n                <h2>Log In</h2>\n                <button id=\"signup-button\" className=\"roundbutton\" onClick={ () => this.setState({ logIn: false }) }>Sign Up</button>\n                <form onSubmit={ this.submitLogin }>\n                    <label  htmlFor=\"log_in_username\">Username</label>\n                    <input  id=\"log_in_username\" \n                            type=\"text\" \n                            onChange={ this.onChange } \n                            name=\"username\" \n                            value={ this.state.username } />\n                            <div></div>\n                    <label  htmlFor=\"log_in_password\">Password</label>\n                    <input  id=\"log_in_password\" \n                            type=\"password\" \n                            onChange={ this.onChange } \n                            name=\"password\" \n                            value={ this.state.password } />\n                    <input id=\"password-submit\" type=\"submit\" className=\"roundbutton\" />\n                    <div>\n                        <br></br>\n                    </div>\n                </form>\n            </section>\n            :\n            <section id=\"signup\">\n                <h2>Sign up</h2>\n                <button id=\"signup-button\" className=\"roundbutton\" onClick={ () => this.setState({ logIn: true }) }>I already signed up</button>\n                <form onSubmit={ this.signUpSubmitted }>\n                    <label  htmlFor=\"sign_up_username\">Username</label>\n                    <input  id=\"sign_up_username\" \n                            type=\"text\" \n                            onChange={ this.onChange } \n                            name=\"username\" \n                            value={ this.state.username } />\n                    <label  htmlFor=\"sign_up_password\">Password</label>\n                    <input  id=\"sign_up_password\" \n                            type=\"password\" \n                            onChange={ this.onChange } \n                            name=\"password\" \n                            value={ this.state.password } />\n                    <input type=\"submit\" id=\"password-submit\" className=\"roundbutton\"/>\n                    <div>\n                        <br></br>\n                    </div>\n                </form>\n            </section>\n        }\n        </>\n    }\n}\n","import React, { Component } from 'react'\nimport MapContainer from '../src/containers/mapcontainer'\nimport './index.css';\nimport SearchForm from '../src/components/searchform'\nimport Favbeach from '../src/components/favbeach'\nimport ReviewForm from '../src/components/reviewform'\nimport Reviews from '../src/components/reviews'\nimport Userbeaches from '../src/components/userbeaches'\nimport Login from './components/Login'\nimport {Route, Link} from 'react-router-dom'\nimport Beachchart from './components/beachchart'\n\n\nexport default class App extends Component {\n    state = {\n        userbeaches:[],\n        qLatLong:{},\n        reviews:[],\n        results:[],\n        rawBeaches:[],\n        displayBeach:[],\n        user: {\n            id: 1\n            },\n        geocode:{lat:\"\",\n                long:\"\"\n            },\n        token:localStorage.token,\n        loggedInUserId:localStorage.userId,\n        name:localStorage.name\n    }\n   \n    componentDidMount(){\n        fetch(\"http://localhost:3000/reviews\")\n        .then(res=> res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(resArr=>{\n            this.setState({reviews:resArr})\n        })\n\n        fetch(\"http://localhost:3000/userbeaches\")\n        .then(res=> res.json())\n        .then(resArr=>{\n            this.setState({userbeaches:resArr})\n        })\n    }\n\n    \n    setToken = ({token, user_id, name}) => {\n        localStorage.token = token\n        localStorage.userId = user_id\n        localStorage.name = name\n        \n        this.setState({\n            token:token,\n            loggedInUserId:user_id,\n            name:name\n        })\n    }\n    \n    logOutClick = () => {\n        // localStorage.userId = undefined\n        // localStorage.token = undefined\n        localStorage.clear()\n        this.setState({\n            loggedInUserId: null,\n            token: null\n        })\n    }\n    \n\n    addReview = (reviewRes) => {\n        let reviews = this.state.reviews\n        let filteredReviews = reviews.filter(review => review.id !== reviewRes.id )\n        filteredReviews.unshift(reviewRes)\n        this.setState({reviews:filteredReviews})\n    }\n   \n    deleteReview = (review_id) => {\n                            const url = `http://localhost:3000/reviews/${review_id}`\n                            fetch(url, {method: 'DELETE'})\n                            .then(res=>res.json())\n                            .catch(error=>console.error(\"Error:\", error))\n                            .then(respObj=>{\n                                let reviews = this.state.reviews.filter(review => review.id !== review_id)\n                                this.setState({reviews:reviews})\n                            })  \n                        }\n                        \n    grabBeaches = async (QlatLong) => {\n        let rawBeaches = await fetch('http://localhost:3000/beaches')\n        let beaches = await rawBeaches.json()\n        let newBeaches = beaches.filter(beach => {\n            return parseFloat(beach.lat) <= QlatLong.lat+.05 && \n            parseFloat(beach.lat) >= QlatLong.lat-.05\n        })\n        // console.log(newBeaches)\n        this.setState({results:newBeaches,\n                        rawBeaches:beaches})\n    }\n    \n\n    queryCode = (responseObj) => {\n        let QlatLong = {}\n        if (responseObj.results.length >0){\n            QlatLong.lat = responseObj.results[0].geometry.location.lat\n            QlatLong.lng =  responseObj.results[0].geometry.location.lng\n        }else{\n            alert(\"Your Please Resubmit your user Query\")\n            // QlatLong = {lat:37.8591,lng:122.4853}\n        }\n            // console.log(\"default\", QlatLong)\n        this.grabBeaches(QlatLong)\n        this.setState({qLatLong:QlatLong})\n    }\n\n    displayBeach = (clickedBeach, props) => {\n        this.setState({displayBeach:clickedBeach})\n        // console.log(\"favbeach props\", props)\n        props.history.push('/favbeach')\n        // console.log(\"clickedBeach\",clickedBeach)\n    }\n\n    // userBeaches = (props) =>{\n    //     return <Link to='/userbeaches'>Userbeaches</Link>\n    //     // props.history.push('/userbeaches')\n    // }\n\n    // returnHome = (props) =>{\n    //     props.history.push('/')\n    // }\n    \n                         \n    reviewBeach = (props, beach_id) => {\n        if (!!props){\n        props.history.push('/reviews')\n        }else{\n            return < redirect to={{ pathname: \"/reviews\" }} />\n        }\n    }\n\n\n    // refreshBeaches = (event) => {\n    //     this.setState({displayBeach:[]})\n    // }\n    \n    updateReview = (review, newReview) => {\n        console.log(review, newReview)\n        let review_id = review.id\n        let reviewPatch = {user_id:this.state.loggedInUserId, beach_id:review.beach_id, review:newReview}\n        const url = `http://localhost:3000/reviews/${review_id}`\n        fetch(url, {method:'PATCH',\n            body:JSON.stringify(reviewPatch),\n            headers: {'content-type':'application/json'}\n            })\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n           return console.log(respObj)\n        })\n    }\n\n    addBeachtoUBs = async (props) => {\n        const beach_id = await parseInt(props.beach.id)\n        // console.log(\"beach_id\", props.beach.id)\n        const user_id = this.state.loggedInUserId\n        const name = await props.beach.name\n        const userbeach = {beach_id:beach_id, user_id:user_id, name:name}\n        const url = \"http://localhost:3000/userbeaches\"\n        fetch(url, {method: 'POST',\n        body:JSON.stringify(userbeach),\n        headers: {'content-type':'application/json'}\n        }).then(res => res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(res => {\n            console.log('Success:',res)\n            let userbeaches = this.state.userbeaches\n            userbeaches.unshift(res)\n           this.setState({userbeaches:userbeaches})\n           props.history.push('/userbeaches')\n        })\n    }\n\n    deleteFromUBs = (beach) => {\n        const url = `http://localhost:3000/userbeaches/${beach.id}`\n        fetch(url, {method: 'DELETE'})\n        .then(res=>res.json())\n        .catch(error=>console.error(\"Error:\", error))\n        .then(respObj=>{\n            let userbeaches = this.state.userbeaches.filter(userbeach => userbeach.id !== beach.id)\n            this.setState({userbeaches:userbeaches})\n        })  \n    }\n    \n    \n    render() {  \n        return (\n            <div id=\"title\">\n                    CALIFORNIA BEACH FINDER\n                <div className=\"navbuttonscontainer\">\n                    <Link to=\"/\">\n                    <button className=\"roundbutton\">\n                    Beach Finder Mainpage</button>\n                    </Link>\n                    <Link to=\"/beachchart\">\n                    <button className=\"roundbutton\">\n                    Beach Data Chart</button>\n                    </Link>\n                    <Link to=\"/userbeaches\">\n                    <button className=\"roundbutton\">Favorite Beaches</button>\n                    </Link>\n                    <Link to=\"/reviews\">\n                    <button className=\"roundbutton\"\n                    >Reviews</button>\n                    </Link>\n\n                \n                    {!!this.state.token\n                                    ? <Login \n                                    token={this.state.token}\n                                    setToken={this.setToken}\n                                    loggedInUserId={this.state.loggedInUserId}/>\n                                    : <Login setToken={this.setToken}\n                                    />\n                    }\n                    <>\n                    {!!this.state.token\n                        ? <button className=\"roundbutton\" onClick={this.logOutClick}>Log Out</button>\n                        :\"\"\n                    }\n                    </>\n                    </div>\n                    <Route exact path={'/'} render= {(props) => \n                    <div id=\"search-bar\">\n                                <SearchForm {...props} \n                                grabBeaches={this.grabBeaches}\n                                queryCode={this.queryCode}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/'} render= {(props) => \n                        {return this.state.results.length === 0 \n                        ? \n                        <div id=\"map-showcase\">\n                        <MapContainer {...props} \n                        beaches={this.state.results} \n                        qLatLong={this.state.qLatLong}\n                        displayBeach={this.displayBeach}/>\n                        </div> \n                        :\n                        <div id=\"map-showcase\"> \n                        <MapContainer {...props}\n                        beaches={this.state.results} \n                        displayBeach={this.displayBeach}\n                        qLatLong={this.state.qLatLong}\n                    />\n                     {/* {console.log(\"this.state.qLatLong\", this.state.qLatLong)} */}\n                    </div>\n                    }\n                    }\n                    />\n\n                    <Route exact path={'/favbeach'} render= {(props) =>\n                   <div id=\"fav-beach\">\n                    <Favbeach id=\"favbeach\" {...props} \n                        beach={this.state.displayBeach}\n                        refreshBeaches={this.refreshBeaches}\n                        addBeachtoUBs={this.addBeachtoUBs}\n                        userBeaches={this.userBeaches}\n                    />\n                    </div>           \n                    }    \n                    /> \n\n                    <Route exact path={'/userbeaches'} render= {(props) => \n                    <div id=\"userbeaches\">\n                    <Userbeaches {...props}\n                    userbeaches={this.state.userbeaches}\n                    deleteFromUBs={this.deleteFromUBs}\n                    returnHome={this.returnHome}\n                    reviewBeach={this.reviewBeach}\n                    user_id={this.state.loggedInUserId}\n                    rawBeaches={this.state.rawBeaches}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render= {(props) =>\n                    <div id=\"reviewform roundbutton\">\n                    <ReviewForm {...props}\n                                displayBeach={this.state.displayBeach}\n                                addReview={this.addReview}\n                                returnHome={this.returnHome}\n                                user_id={this.state.loggedInUserId}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/reviews'} render={(props) =>\n                    <div id=\"reviews\">\n                    <Reviews {...props}\n                            reviews={this.state.reviews}\n                            beaches={this.state.results}\n                            deleteReview={this.deleteReview}\n                            updateReview={this.updateReview}\n                            user_id={this.state.loggedInUserId}\n                    />\n                    </div>}\n                    />\n\n                    <Route exact path={'/beachchart'} render={(props) =>\n                    <div id=\"beachchart\">\n                    <Beachchart {...props}\n                       rawBeaches={this.state.rawBeaches}\n                    />\n                    </div>}\n                    />\n           \n        </div>\n        )\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>, \ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/beach-marker.cfafeca2.png\";"],"sourceRoot":""}